@model ePatria.Models.NotulenEntryMeeting

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm("Create", "NotulenEntryMeetings", FormMethod.Post, new { enctype = "multipart/form-data", id="notform" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Notulen Entry Meeting</h4>
        <hr />
        <div class="error-container">
            <ul></ul>
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.Hidden("ReviewRelationMasterID")

        <div class="form-group">
            @Html.LabelFor(model => model.LetterOfCommandID, "Nomer SP", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBox("letterno", null, new { @class = "form-control", placeholder = "Auto Complete" })
                @Html.ValidationMessageFor(model => model.LetterOfCommandID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tujuan,"Agenda", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextAreaFor(model => model.Tujuan, new { @class = "form-control", @rows = "4" })
                @Html.ValidationMessageFor(model => model.Tujuan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group input-group-sm">
                @Html.Label("Time Consumable", htmlAttributes: new { @class = "control-label col-md-2" })
                    
                <div class="col-md-2">
                    <input name='period1' input type='text' class="form-control datetimepicker" />
                </div>

                <div class="col-md-2">
                    <input name='period2' input type='text' class="form-control datetimepicker" />
                </div>
          </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Place, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Place, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Place, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeChairmanID, "Chairman", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBox("empchair", null, new { @class = "form-control", placeholder = "Auto Complete" })
                @Html.ValidationMessageFor(model => model.EmployeeChairmanID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeModeratorID, "Moderator", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBox("empmoderator", null, new { @class = "form-control", placeholder = "Auto Complete" })
                @Html.ValidationMessageFor(model => model.EmployeeModeratorID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeReporterID, "Notulis", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBox("empreporter", null, new { @class = "form-control", placeholder = "Auto Complete" })
                @Html.ValidationMessageFor(model => model.EmployeeReporterID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeMemberID, "Member", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBox("empmember", null, new { @class = "form-control", placeholder = "Auto Complete" })
                @Html.ValidationMessageFor(model => model.EmployeeMemberID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Opening, "Opening", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextAreaFor(model => model.Opening, new { @class = "form-control", @rows = "4" })
                @Html.ValidationMessageFor(model => model.Opening, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExposurePlan, "Exposure Plan", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextAreaFor(model => model.ExposurePlan, new { @class = "form-control", @rows = "4" })
                @Html.ValidationMessageFor(model => model.ExposurePlan, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.Label("File", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="files" id="file1" class="file1" />
                <div class="preview"></div>
            </div>
        </div>

        <script>
            $(function () {
                $("input[name=files]").previewimage({
                    div: ".preview"
                });
            });
        </script>
        <style type="text/css">
            input[type='file'] {
                color: transparent;
            }
        </style>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-5">
                <input type="submit" value="Create" class="btn blue" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $(function () {
        $('#letterno').autocomplete({
            source: '@Url.Action("AutocompleteAPM")', change: function (event, ui) {
                if (!ui.item) {
                    $(this).val("");
                }
            }
        });
        $('#empchair').autocomplete({
            source: '@Url.Action("AutocompleteEmp")', change: function (event, ui) {
                if (!ui.item) {
                    $(this).val("");
                }
            }
        });
        $('#empmoderator').autocomplete({
            source: '@Url.Action("AutocompleteEmp")', change: function (event, ui) {
                if (!ui.item) {
                    $(this).val("");
                }
            }
        });
        $('#empreporter').autocomplete({
            source: '@Url.Action("AutocompleteEmp")', change: function (event, ui) {
                if (!ui.item) {
                    $(this).val("");
                }
            }
        });
        $('#empmember').autocomplete({
            source: '@Url.Action("AutocompleteEmp")', change: function (event, ui) {
                if (!ui.item) {
                    $(this).val("");
                }
            }
        });
    })
    
    $("#notform").validate({
        errorLabelContainer: $("ul", $('div.error-container')),
        wrapper: 'li',
        rules: {
            letterno: "required",
            Tujuan: "required",
            period1: "required",
            period2: "required",
            Place: "required",
            empchair: "required",
            empmoderator: "required",
            empreporter: "required",
            empmember: "required",
            Opening: "required",
            ExposurePlan: "required"
        },
        messages: {
            letterno: "Please enter Letter No",
            Tujuan: "Please enter Agenda",
            period1: "Please enter Time 1",
            period2: "Please enter Time 2",
            Place: "Please enter Place",
            empchair: "Please enter Chairman name",
            empmoderator: "Please enter Moderator name",
            empreporter: "Please enter Notulis name",
            empmember: "Please enter Member name",
            Opening: "Please enter Opening",
            ExposurePlan: "Please enter Exposure Plan"
        }
    });
</script>
}

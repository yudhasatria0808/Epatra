@model ePatria.Models.RCMDetailRiskControlIssue

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "MonitoringTindakLanjut", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Monitoring Tindak Lanjut</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.RCMDetailRiskControlIssueID)
        @Html.HiddenFor(model => model.RCMDetailRiskControlID)
        @Html.HiddenFor(model => model.Status)
        @Html.HiddenFor(model => model.Signification)
        @Html.HiddenFor(model => model.Status_Approval)
        @Html.HiddenFor(model => model.Status_App)
        @Html.HiddenFor(model => model.Fact)

        <div class="form-group">
            @Html.LabelFor(model => model.NoRef, "No.Ref", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.NoRef, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, "Title", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Criteria, "Criteria", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.TextAreaFor(model => model.Criteria, new { @class = "form-control", @readonly = "true" } )
                <script>
                    CKEDITOR.replace('Criteria');
                </script>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Impact, "Impact", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.TextAreaFor(model => model.Impact, new { @class = "form-control", @readonly = "true"} )
                <script>
                    CKEDITOR.replace('Impact');
                </script>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ImpactValue, "Impact Value", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.TextAreaFor(model => model.ImpactValue, new { @class = "form-control", @readonly = "true"} )
            </div>
            <script>
                CKEDITOR.replace('ImpactValue');
            </script>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Cause, "Cause", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.TextAreaFor(model => model.Cause, new { @class = "form-control", @readonly = "true"} )
                <script>
                    CKEDITOR.replace('Cause');
                </script>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Recommendation, "Recommendation", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.TextAreaFor(model => model.Recommendation, new { @class = "form-control", @readonly = "true"} )
                <script>
                    CKEDITOR.replace('Recommendation');
                </script>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ManagementResponse, "Management Response", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.TextAreaFor(model => model.ManagementResponse, new { @class = "form-control", @rows = 4, @cols = 2} )
                <script>
                    CKEDITOR.replace('ManagementResponse');
                </script>
            </div>
        </div>
        <div class="form-group">
            @Html.Label("PIC", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBox("PICID", null, new { @class = "form-control", @placeholder = "Auto Complete" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Finding Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownList("FindingType", new List<SelectListItem>
                {
                    new SelectListItem{ Text="-Please select-", Value = "" },
                    new SelectListItem{ Text="Operational", Value = "Operational" },
                    new SelectListItem{ Text="Financial", Value = "Financial" },
                    new SelectListItem{ Text="Compliance", Value = "Compliance" }
                }, htmlAttributes: new { @class = "form-control"})
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Due Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBox("Due_Date", null, new { @class = "form-control datepicker", @readonly = true })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Case Close?", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.RadioButtonFor(model => model.CaseClose, "true") Yes
                @Html.RadioButtonFor(model => model.CaseClose, "false") No
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Close Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBox("Close_Date", null, new { @class = "form-control datepicker", @readonly = true })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("File : ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (ViewBag.paths != null)
                {

                    int i = 0;
                    List<string> images = new List<string>();
                    foreach (var path in ViewBag.paths)
                    {
                        i++;
                        string imageid = "image" + i.ToString();
                        <div class="image">
                            <img src="@path" alt="image" width="20%" height="20%" id=@imageid style="display:none" />
                            <div>
                                @Html.Label("Delete", null, new { @class = "removeImage btn btn-xs red", @style = "cursor:pointer" })
                                @Html.ActionLink("Download", "../" + (string)path, null, new { target = "_blank", @class = "btn btn-xs green" })
                                @Html.LabelFor(model => model.RCMDetailRiskControlIssueID, (string)path.Split('/')[3])
                                @{images.Add(Convert.ToString(path));}
                            </div>
                        </div>
                    }
                    Session["Images"] = images.ToArray();
                }
                <input type="file" name="files" id="file1" class="file1" />
                <div class="preview"></div>
            </div>
        </div>
        <script>
            $('.removeImage').click(function () {
                $(this).parent().parent().remove();
                var images = [];
                if ($('.image').length > 0) {
                    $('.image').each(function (index) {
                        images.push($(this).find('img').attr('src'));
                    });
                } else
                    images = "deleteall";
                $.ajax({
                    type: "POST",
                    traditional: true,
                    url: "../getImages",
                    data: { images: images }
                });
            });
            $(function () {
                $("input[name=files]").previewimage({
                    div: ".preview"
                });
            });
        </script>
        <style type="text/css">
            input[type='file'] {
                color: transparent;
            }
        </style>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery.autosize-min.js"></script>
    <script src="~/Scripts/jquery.timeago.js"></script>
    <script src="~/Scripts/knockout-3.4.0.js"></script>
    <script src="~/Scripts/wallpost.js"></script>
}
<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>
<script>
    $(function () {
        $('#PICID').autocomplete({
            source: '@Url.Action("PICAutocomplete")', change: function (event, ui) {
                if (!ui.item) {
                    $(this).val("");
                }
            }
        });
    });
</script>

<h2>Review Notes</h2>

@*<div class="col-md-6">
    <div class="input-group">*@
<div class="publishContainer">
    <textarea class="msgTextArea" id="txtMessage" data-bind="value: newMessage, jqAutoresize: {}" style="height:3em;" placeholder="Write your comment..."></textarea>
    <div class="btn-group ">
        <button class="btn btn-primary btn-lg" data-url="/Wall/SavePost" value="Comment" id="btnShare" data-bind="click: addPost">Comment</button>
        <input type="hidden" data-bind="value: apmId" class="apmId" value="@Model.RCMDetailRiskControlIssueID" />
        @{
            int apmId = Model.RCMDetailRiskControlIssueID;
        }
        <script>
            localStorage.apmId = 'issue' + '@apmId';
        </script>
    </div>
</div>
<ul id="msgHolder" data-bind="foreach: posts">
    <li class="postHolder">
        <img data-bind="attr: { src: '../../Content/assets/global/img/avatar3_small.jpg' }"><a data-bind="text: PostedByName"></a>: <span data-bind="html: Message"></span>
        <div class="postFooter">
            <span class="timeago" data-bind="text: PostedDate"></span>&nbsp;<a class="linkComment" href="#" data-bind="click: toggleComment">Reply</a>
            <div class="commentSection">
                <ul data-bind="foreach: PostComments">
                    <li class="commentHolder">
                        <img data-bind="attr: { src: '../../Content/assets/global/img/avatar3_small.jpg' }"><a data-bind="text: CommentedByName"></a>: <span data-bind="    html: Message"></span>
                        <div class="commentFooter"> <span class="timeago" data-bind="text: CommentedDate"></span>&nbsp;</div>
                    </li>
                </ul>
                <div style="display: block" class="publishComment">
                    <textarea class="commentTextArea" data-bind="value: newCommentMessage, jqAutoresize: {}" placeholder="Write your reply..."></textarea>
                    <input type="button" value="Reply" class="btn blue" data-bind="click: addComment" />
                </div>
            </div>
        </div>
    </li>
</ul>
@*</div>
    </div>*@


<style>
    .msgTextArea {
        width: 100%;
        height: 80px;
        border-radius: 7px;
    }

    .commentTextArea {
        width: 93%;
        border-radius: 7px;
        height: 40px;
    }

    .publishContainer {
        width: 65%;
        text-align: right;
        background-color: #F2F2F2;
        border-color: #B4BBCD;
        border-image: none;
        border-style: solid;
        border-width: 1px;
        padding: 1em 1.2em;
        margin-bottom: 2em;
    }

    .publishComment {
        text-align: right;
        width: 100%;
        display: none;
    }

    #msgHolder {
        width: 65%;
    }

        #msgHolder img {
            float: left;
            margin-right: 7px;
        }

        #msgHolder a {
            text-decoration: none;
            color: #015BA7;
        }

            #msgHolder a:hover {
                text-decoration: underline;
            }

    .postHolder {
        padding: 5px;
        border-bottom: solid 1px #E6E6E6;
        margin: 5px;
        list-style: none;
    }

        .postHolder p {
            margin: 4px auto 7px 50px;
        }

        .postHolder a {
            font-weight: bold;
        }

    .postFooter {
        font-size: 0.85em;
        margin-left: 55px;
    }

        .postFooter span {
            color: #7D7D84;
        }

        .postFooter a {
            font-weight: normal;
        }

    .commentHolder {
        clear: both;
        background-color: #EEF1F6;
        padding: 5px;
        border-bottom: 1px solid #DEE5EA;
        border-top: 1px solid white;
        list-style: none;
    }

    #btnShare, .btnComment, .btnRequest {
        background-color: #5B74A8;
        border: 0 none;
        color: #FFFFFF;
        cursor: pointer;
        font-size: 13px;
        font-weight: bold;
        margin-right: 10px;
        padding: 5px;
        text-align: center;
        
    }

    aside {
        float: right;
        width: 30%;
        font-size: 0.85em;
    }

        aside > div, #myConnections {
            border: solid 2px #3B5998;
            border-radius: 7px;
            float: left;
            width: 99%;
            margin-bottom: 5px;
        }

            aside h3, #myConnections h3 {
                background-color: #3B5998;
                color: White;
                margin: 0px;
                padding: 3px;
                font-size: 0.95em;
            }

            aside a, #myConnections a {
                text-decoration: none;
                color: #015BA7;
                font-weight: bold;
            }

                aside a:hover, #myConnections a:hover {
                    text-decoration: underline;
                }

            aside img, #myConnections img {
                float: left;
                margin-right: 7px;
            }

    .useritem {
        border-bottom: 1px solid #DEE5EA;
        clear: both;
        overflow: auto;
        padding: 3px;
    }

        .useritem p {
            margin: 4px auto 7px 55px;
        }

    .btnRequest, .btn {
        margin-top: 7px;
    }

    #myConnections {
        margin: 15px;
        width: 60%;
        font-size: 0.85em;
    }
</style>
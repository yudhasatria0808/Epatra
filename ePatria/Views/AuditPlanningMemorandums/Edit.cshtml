@model ePatria.Models.AuditPlanningMemorandum

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>
@using Microsoft.AspNet.Identity;
@{ 
    var checkPerm = HelperController.getPermissionRoleByPerm("Audit Planning Memorandum", User.Identity.GetUserId());
    var userPerm = HelperController.getPermission(User.Identity.GetUserId(), "Audit Planning Memorandum");
    }
@using (Html.BeginForm("Edit", "AuditPlanningMemorandums", FormMethod.Post, new { enctype = "multipart/form-data", id="apmform" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Audit Planning Memorandum</h4>
        <hr />
        <div class="error-container">
            <ul></ul>
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.AuditPlanningMemorandumID)
       
            <div class="form-group">
                @Html.LabelFor(model => model.PreliminaryID, "No. Preliminary Survey", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.TextBox("nomer", null, new { @class = "form-control", @readonly = true })
                    @Html.ValidationMessageFor(model => model.PreliminaryID, "", new { @class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.NomerAPM, "Nomer APM", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-5">
                    @Html.EditorFor(model => model.NomerAPM, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @Html.ValidationMessageFor(model => model.NomerAPM, "", new { @class = "text-danger" })
                </div>
            </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActivityID, "Activity", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @*<select id="activid" name="activid" class=" form-control"></select>*@
                @Html.TextBox("activid", null, new { @class = "form-control", @readonly = true })
                @Html.ValidationMessageFor(model => model.ActivityID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActivityID, "Engagement Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @*<select id="enggname" name="enggname" class=" form-control"></select>*@
                @Html.TextBox("enggname", null, new { @class = "form-control", @readonly = true })
                @Html.ValidationMessageFor(model => model.ActivityID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ActualEngagement, "Actual Engagement", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @*<select id="enggname" name="enggname" class=" form-control"></select>*@
                @Html.TextBoxFor(model => model.ActualEngagement, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ActivityID, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group input-group-sm">
            @Html.LabelFor(model => model.Date_Start, "Jadwal Audit", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.Date_Start, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker", @readonly = true})
                @Html.ValidationMessageFor(model => model.Date_Start, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.Date_End, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker", @readonly = true})
                @Html.ValidationMessageFor(model => model.Date_End, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TujuanAudit, "Tujuan Audit", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextAreaFor(model => model.TujuanAudit, new { @class = "form-control", @rows = "4" })
                @Html.ValidationMessageFor(model => model.TujuanAudit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RuangLingkupAudit, "Ruang Lingkup Audit", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextAreaFor(model => model.RuangLingkupAudit, new { @class = "form-control", @rows = "4" })
                @Html.ValidationMessageFor(model => model.RuangLingkupAudit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MetodologiAudit, "Metodologi Audit", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextAreaFor(model => model.MetodologiAudit, new { @class = "form-control", @rows = "4" })
                @Html.ValidationMessageFor(model => model.MetodologiAudit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataDanDokumen, "Data dan Dokumen", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextAreaFor(model => model.DataDanDokumen, new { @class = "form-control", @rows = "4" })
                @Html.ValidationMessageFor(model => model.DataDanDokumen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
        @Html.Label("File : ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (ViewBag.paths != null)
            {
                
                int i = 0;
                    List<string> images = new List<string>();
                    foreach (var path in ViewBag.paths)
                    {
                        i++;
                        string imageid = "image"+i.ToString();
                            <div class="image">
                                <img src="@path" alt="image" width="20%" height="20%" id=@imageid style="display:none" />
                                <div>
                                    @Html.Label("Delete", null, new { @class="removeImage btn btn-xs red", @style="cursor:pointer" })
                                    @Html.ActionLink("Download", "../"+(string)path, null, new { target="_blank", @class="btn btn-xs green"})
                                    @Html.LabelFor(model => model.AuditPlanningMemorandumID, (string)path.Split('/')[3])
                                    @{images.Add(Convert.ToString(path));}
                                </div>
                            </div>
                    }
                    Session["Images"] = images.ToArray();
                }
                <input type="file" name="files" id="file1" class="file1" />
                <div class="preview"></div>
            </div>
        </div>
        <script>
            $('.removeImage').click(function () {
                $(this).parent().parent().remove();
                var images = [];
                if ($('.image').length > 0) {
                    $('.image').each(function (index) {
                        images.push($(this).find('img').attr('src'));
                    });
                } else
                    images = "deleteall";
                $.ajax({
                    type: "POST",
                    traditional: true,
                    url: "../getImages",
                    data: { images: images }
                });
            });
            $(function () {
            $("input[name=files]").previewimage({
                div: ".preview"
            });
            });
        </script>
        <style type="text/css">
            input[type='file'] {
              color: transparent;
            }
        </style>


        <div class="form-group input-group-sm">
            @Html.LabelFor(model => model.WalktroughDateStart, "Walktrough ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.WalktroughDateStart, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker", @readonly = true })
                @Html.ValidationMessageFor(model => model.WalktroughDateStart, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.WalktroughDateEnd, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker", @readonly = true })
                @Html.ValidationMessageFor(model => model.WalktroughDateEnd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group input-group-sm">
            @Html.LabelFor(model => model.EntryMeetingDateStart, "Entry Meeting ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextBoxFor(model => model.EntryMeetingDateStart, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker", @readonly = true })
                @Html.ValidationMessageFor(model => model.EntryMeetingDateStart, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group input-group-sm">
            @Html.LabelFor(model => model.FieldWorkDateStart, "Field Work", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.FieldWorkDateStart, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker", @readonly = true })
                @Html.ValidationMessageFor(model => model.FieldWorkDateStart, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.FieldWorkDateEnd, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker", @readonly = true })
                @Html.ValidationMessageFor(model => model.FieldWorkDateEnd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group input-group-sm">
            @Html.LabelFor(model => model.ExitMeetingDateStart, "Exit Meeting", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextBoxFor(model => model.ExitMeetingDateStart, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker", @readonly = true })
                @Html.ValidationMessageFor(model => model.ExitMeetingDateStart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group input-group-sm">
            @Html.LabelFor(model => model.LHADateStart, "LHA", htmlAttributes: new { @class = "control-label col-md-2" })
            @*@Html.ActionLink("Details", "Details", new { id = Model.AuditPlanningMemorandumID }, new { data_toggle = "modal", data_target = "#detailRCM", id = "blockui_sample_3_1" }) |*@
           
            <div class="col-md-4">
                @Html.TextBoxFor(model => model.LHADateStart, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker", @readonly = true })
                @Html.ValidationMessageFor(model => model.LHADateStart, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.PICID, "Responsible Person", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBox("pic", null, new { @class = "form-control", placeholder = "Auto Complete" })
                @Html.ValidationMessageFor(model => model.PICID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupervisorID, "Supervisor", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBox("supervisor", null, new { @class = "form-control", placeholder = "Auto Complete" })
                @Html.ValidationMessageFor(model => model.SupervisorID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TeamLeaderID, "Team Leader", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBox("leader", null, new { @class = "form-control", placeholder = "Auto Complete" })
                @Html.ValidationMessageFor(model => model.TeamLeaderID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="MemberGroup">
            @{var y = 0;}
            @foreach (var mem in Model.MemberID.Split(';')) {
                y++;
                if (y < Model.MemberID.Split(';').Count()) {
                    <div class="form-group" id="membersdiv-@y">
                        @if (y == 1)
                        { 
                            @Html.Label("Member", htmlAttributes: new { @class = "control-label col-md-2", @id = "memberlabel#1" })
                        }                   
                        <div class="col-md-5">
                            <input name="members" id="members-@y" class="form-control members" type="text" placeholder = "Auto Complete" value="@mem" />
                        </div>
                        @if (y != 1)
                        {
                            <div class="col-md-2"><a href="#" class="btn btn-sm red" onclick="removeMember(@y);"><i class="fa fa-times"></i></a></div>
                        }
                    </div>
                }
            }
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-5">
                <a href="#" class="btn btn-sm green" id='addButtonMember'><i class="fa fa-plus"></i>Add More Member</a>
                @*<a href="#" class="btn btn-sm red" id='removeButtonMember'><i class="fa fa-times"></i>Remove Member</a>*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Kesimpulan, "Catatan", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextAreaFor(model => model.Kesimpulan, new { @class = "form-control", @rows = "4" })
                @Html.ValidationMessageFor(model => model.Kesimpulan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-5">
                @Html.HiddenFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (userPerm.Any(d => d.IsCreate))
                {
                    if (userPerm.Any(d => d.IsSubmit1))
                    {
                        if (checkPerm.Contains("IsSubmit2"))
                        {
                            <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[2].Split(';')[0]"> Submit</button>
                        }
                        else if (checkPerm.Contains("IsApprove"))
                        {
                            <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]"> Submit</button>
                        }
                    }
                    else
                    {
                        <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[1].Split(';')[0]"> Submit</button>
                    }
                }
                else if (userPerm.Any(d => d.IsSubmit1))
                {
                    if (checkPerm.Contains("IsSubmit2"))
                    {
                        <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[2].Split(';')[0]"> Submit</button>
                    }
                    else if (checkPerm.Contains("IsApprove"))
                    {
                        <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]"> Submit</button>
                    }
                }
                else if (userPerm.Any(d => d.IsSubmit2))
                {
                    if (checkPerm.Contains("IsApprove"))
                    {
                        <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]"> Submit</button>
                    }
                }
                @if (checkPerm.Contains("IsSubmit1"))
                {
                    @*<button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[2].Split(';')[0]">Submit</button>*@
                    @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[1].Split(';')[0]" />*@
                }
                else if (checkPerm.Contains("IsSubmit2"))
                {
                    @*<button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[3].Split(';')[0]">Submit</button>*@
                    @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[2].Split(';')[0]" />*@
                }
                else if (checkPerm.Contains("IsApprove"))
                {
                    @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]" />*@
                }
                <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Save" />
            </div>
        </div>
    </div>
 

}

<div id="Editmember" class="modal fade" tabindex="-1" data-width="760">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
        <h4 class="modal-title">Edit Personil</h4>
    </div>
    <div class="modal-body">
        <div class="form-horizontal">
            @Html.Hidden("id", @Model.AuditPlanningMemorandumID, new { @class = "form-control" })
            @Html.Hidden("ideng", @Model.Preliminary.EngagementID, new { @class = "form-control" })
            <div class="form-group">
                @Html.Label("Responsible Person", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-6">
                    @Html.TextBox("pic1", null, new { @class = "form-control", placeholder = "Auto Complete" })
                    @Html.ValidationMessage("PICID", "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Supervisor", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-6">
                    @Html.TextBox("supervisor1", null, new { @class = "form-control", placeholder = "Auto Complete" })
                    @Html.ValidationMessage("SupervisorID", "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Team Leader", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-6">
                    @Html.TextBox("leader1", null, new { @class = "form-control", placeholder = "Auto Complete" })
                    @Html.ValidationMessage("TeamLeaderID", "", new { @class = "text-danger" })
                </div>
            </div>

            <div id="MembersGroup">
                <div class="form-group" id="memberdiv1">
                    @Html.Label("Member", htmlAttributes: new { @class = "control-label col-md-4", @id = "questionlabel#1" })
                    <div class="col-md-6">
                        @Html.TextBox("member-1", null, new { @class = "form-control member", placeholder = "Auto Complete" })
                    </div>
                </div>
            </div>

            <script type="text/javascript">
                $(function () {

                    $('.member').autocomplete({
                        source: '@Url.Action("AutocompleteMember")',
                            appendTo: $("#Editmember"), change: function (event, ui) {
                            if (!ui.item) {
                                $(this).val("");
                            }
                        }
                    });
                    $('#pic1').autocomplete({
                        source: '@Url.Action("AutocompleteCIA")',
                            appendTo: $("#Editmember"), change: function (event, ui) {
                            if (!ui.item) {
                                $(this).val("");
                            }
                        }
                    });
                    $('#leader1').autocomplete({
                        source: '@Url.Action("AutocompleteKetua")',
                            appendTo: $("#Editmember"), change: function (event, ui) {
                            if (!ui.item) {
                                $(this).val("");
                            }
                        }
                    });
                    $('#supervisor1').autocomplete({
                        source: '@Url.Action("AutocompletePengawas")',
                            appendTo: $("#Editmember"), change: function (event, ui) {
                            if (!ui.item) {
                                $(this).val("");
                            }
                        }
                    });
                });
            </script>



            <div class="form-group">
                <div class="col-md-offset-4 col-md-6">
                    <a href="#" class="btn btn-sm green" id='addButton'><i class="fa fa-plus"></i>Add More Member</a>
                    @*<a href="#" class="btn btn-sm red" id='removeButton'><i class="fa fa-times"></i>Remove Member</a>*@
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" data-dismiss="modal" class="btn btn-outline dark">Close</button>
        <button type="button" class="btn green" onclick="javascript: UpdatePersonil($('#pic1').val(), $('#supervisor1').val(), $('#leader1').val(), $('#id').val(), $('#ideng').val());">Save</button>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    $("#apmform").validate({
        errorLabelContainer: $("ul", $('div.error-container')),
        wrapper: 'li',
        rules: {            
            nomer: "required", 
            activid: "required",
            enggname: "required",
            pic: "required",
            supervisor: "required",
            leader: "required",
            members: "required",
        },
        messages: {
            nomer: "Please enter a Preliminary Survey",
            activid: "Please enter a Activity",
            enggname: "Please enter a Engagement",
            pic: "Please enter Resp. Person",
            supervisor: "Please enter Supervisor",
            leader: "Please enter Team Leader",
            members: "Please enter Member",
        }
    });
    $(function () {
        $('.members').autocomplete({
            source: '@Url.Action("AutocompleteMember")', change: function (event, ui) {
                if (!ui.item) {
                    $(this).val("");
                }
            }
        });

        $('#supervisor').autocomplete({
            source: '@Url.Action("AutocompletePengawas")', change: function (event, ui) {
                if (!ui.item) {
                    $(this).val("");
                }
            }
        });
        $('#leader').autocomplete({
            source: '@Url.Action("AutocompleteKetua")', change: function (event, ui) {
                if (!ui.item) {
                    $(this).val("");
                }
            }
        });
        $('#pic').autocomplete({
            source: '@Url.Action("AutocompleteCIA")', change: function (event, ui) {
                if (!ui.item) {
                    $(this).val("");
                }
            }
        });
        $('#nomer').autocomplete({
            source: '@Url.Action("AutocompletePre")', change: function (event, ui) {
                if (!ui.item) {
                    $(this).val("");
                }
            }
        });

    });
    var counter = 2;
    function removeMember(idx) {
        $("#membersdiv-" + idx).remove();
    }
    $(document).ready(function () {
        $("#addButton").click(function () {
            if (counter > 10) {
                alert("Maksimal 10 Member");
                return false;
            }
            var newTextBoxDiv = $(document.createElement('div'))
                 .attr("id", 'memberdiv' + counter).addClass("form-group");
            var html = '<label class = "control-label col-md-4"></label>' +
                '<div class="col-md-6"><input name="member-' + counter + '" id="member-' + counter +
                '" value="" class="form-control member" type="text" placeholder = "Auto Complete" ></div>' + 
                '<div class="col-md-2"><a href="#" class="btn btn-sm red" onclick="removeMember(' + counter + ');"><i class="fa fa-times"></i></a></div>';


            newTextBoxDiv.after().html(html);
            newTextBoxDiv.appendTo("#MembersGroup");
            counter++;
            $('.member').autocomplete({
                source: '@Url.Action("AutocompleteMember")',
                appendTo: $("#Editmember"), change: function (event, ui) {
                    if (!ui.item) {
                        $(this).val("");
                    }
                }
            });
        });
        $("#removeButton").click(function () {
            if (counter == 1) {
                alert("No more Member to remove");
                return false;
            }
            counter--;
            $("#memberdiv" + counter).remove();
        });
    });

    var count = @Model.MemberID.Split(';').Count();
    $(document).ready(function () {
        $("#addButtonMember").click(function () {
            if (count > 10) {
                alert("Maksimal 10 Member");
                return false;
            }
            var newTextBoxDiv = $(document.createElement('div'))
                 .attr("id", 'membersdiv-' + count).addClass("form-group");
            var html = '<label class = "control-label col-md-2"></label>' +
                '<div class="col-md-5"><input name="members" id="members-' + count +
                '" value="" class="form-control members" type="text" placeholder = "Auto Complete" ></div>' +
                '<div class="col-md-2"><a href="#" class="btn btn-sm red" onclick="removeMember(' + count + ');"><i class="fa fa-times"></i></a></div>';
            //for (var i = 0; i < questionArr.length; i++) {
            //    html += "<option value=" + questionArr[i].Value +">" + questionArr[i].Text + "</option>"
            //}
            //html += '</select></div>';

            newTextBoxDiv.after().html(html);
            newTextBoxDiv.appendTo("#MemberGroup");
            count++;
            $('.members').autocomplete({
                source: '@Url.Action("AutocompleteMember")', change: function (event, ui) {
                    if (!ui.item) {
                        $(this).val("");
                    }
                }
            });
        });
        $("#removeButtonMember").click(function () {
            if (count == 1) {
                alert("No more Member to remove");
                return false;
            }
            count--;
            $("#membersdiv-" + count).remove();
        });
    });

    function UpdatePersonil(_emp_pic, _emp_supervisor, _emp_leader,_id,_ideng) {

        var _members = ""
        for (i = 1; i < counter; i++) {
            if (counter == (i + 1)) {
                _members += $("#member-" + i).val()
            }
            else {
                _members += $("#member-" + i).val() + ";"
            }
        }
        //alert(_emp_pic + "-" + _emp_supervisor + "-" + _emp_leader + "-" + _id + "-" + _ideng + "-" + _members);
        $.ajax({
            url: "/AuditPlanningMemorandums/UpdatePersonil/",
            data: {

                pic: _emp_pic,
                supervisor: _emp_supervisor,
                leader: _emp_leader,
                member: _members,
                id: _id,
                ideng: _ideng,

            },
            cache: false,
            type: "POST",
            success: function (data) {
                //var markup = "";
                //for (var x = 0; x < data.length; x++) {
                //    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                //}
                //$("#engagement").html(markup).show();
                $('#Editmember').modal('hide');
                location.reload();
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });
    }
</script>

}

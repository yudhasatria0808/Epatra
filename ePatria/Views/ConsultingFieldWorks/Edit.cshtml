@model ePatria.Models.ConsultingFieldWork

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using Microsoft.AspNet.Identity;
@{ var checkPerm = HelperController.getPermissionRoleByPerm("Consulting Fieldwork", User.Identity.GetUserId()); }
@{ var Perm = HelperController.getPermission(User.Identity.GetUserId(), "Consulting Fieldwork"); 
    var isSuperAdmin = HelperController.isSuperAdmin(User.Identity.GetUserId());
}
@{ var empName = HelperController.getNameByUserName(User.Identity.Name);}
@using (Html.BeginForm(null, null, FormMethod.Post, new {id="cfieldworkform"}))
{
    @Html.AntiForgeryToken()
    <script type="text/javascript">$(function () { cekControl(); });</script>

    
    <div class="dl-horizontal">
        <h4>Consulting FieldWork</h4>
        <hr />
        <div class="error-container">
            <ul></ul>
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ConsultingFieldWorkID)

        <div class="form-horizontal">
            <div class="form-group">
                <label class="control-label col-md-2"> Business Process</label>
                <div class="col-md-2">
                    @{ string valbpm = ViewBag.ConsultingBPM; }
                    @Html.TextBox("ConsultingBPM", valbpm, new { @class = "form-control input-sm" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Sub Business Process</label>
                <div class="col-md-2">
                    @{ string valsub = ViewBag.ConsultingSubBP; }
                    @Html.TextBox("ConsultingSubBP", valsub, new { @class = "form-control input-sm" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Objectives</label>
                <div class="col-md-2">
                    @{ string valobj = ViewBag.ConsultingObj; }
                    @Html.TextBox("ConsultingObj", valobj, new { @class = "form-control input-sm" })
                </div>
            </div>
        </div>


        @*<dt>
            Business Process
        </dt>

        <dd>
            <b>:</b>&nbsp;&nbsp;&nbsp;@Html.TextBox("ConsultingBPM", new { @class = "form-control"})
        </dd>

        <dt>
            Sub Business Process
        </dt>

        <dd>
            <b>:</b>&nbsp;&nbsp;&nbsp; @Html.TextBox("ConsultingSubBP")
        </dd>

        <dt>
            Objectives
        </dt>

        <dd>
            <b>:</b>&nbsp;&nbsp;&nbsp;@Html.TextBox("ConsultingObj")
        </dd>*@

        @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>*@
    </div>
    @Html.Hidden("ConsultingRCMID")
    @Html.Hidden("ConsultingSuratPerintahID")
    @Html.Hidden("newRCMId");
    <div class="dl-horizontal">
        <div class="form-group">
            <div class="col-md-3">
                <div class="form-group">
                    <label>Risks</label>
                    @if (Perm != null && Perm.Any(q => q.IsCreate == true) || isSuperAdmin)
                    {
                        if (Model.Status == "Draft")
                        {
                            <a href="#" class="btn btn-icon-only green" data-toggle = "modal" title="Add Risk" data-target = "#addRisk"><i class="fa fa-plus"></i></a>
                            <a href="#" class="btn btn-icon-only yellow" data-toggle = "modal" title="Edit Risk"  data-target = "#editRisk"><i class="fa fa-edit"></i></a>
                            <a href="#" class="btn btn-icon-only red"  title="Delete Risk"  id="delRisk" data-original-title="Are you sure to delete this Risk?" onclick="javascript:delRisk()"><i class="fa fa-times"></i></a>
                        }
                    } else {
                            <a href="#" class="btn btn-icon-only green" data-toggle = "modal" title="Add Risk" data-target = "#addRisk" style="visibility:hidden"><i class="fa fa-plus"></i></a>
                    }
                    @Html.ListBox(
                        "riskId", 
                        ViewBag.RDR as SelectList,
                        new { @class = "form-control", data_placeholder = "Choose a Risk...", @onchange = "javascript:GetControlByRiskId(this.value);" } 
                    )
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label>Control</label>
                    @if (Perm != null && Perm.Any(q => q.IsCreate == true) || isSuperAdmin)
                    {
                        if (Model.Status == "Draft")
                        {
                            <a href="#" class="btn btn-icon-only green" data-toggle = "modal" title="Add Control" data-target = "#addControl"><i class="fa fa-plus"></i></a>
                            <a href="#" class="btn btn-icon-only yellow" data-toggle = "modal" title="Edit Control" data-target = "#editControl"><i class="fa fa-edit"></i></a>
                            <a href="#" class="btn btn-icon-only red"  title="Delete Control" id="delControl" data-original-title="Are you sure to delete this Control?" onclick="javascript:delControl();"><i class="fa fa-times"></i></a>
                            <a href="#" class="btn purple" data-toggle = "modal" title="Set Status"  data-target = "#setStatus"><i class="fa fa-file-o"></i></a>
                        }
                    }else {
                            <a href="#" class="btn btn-icon-only green" data-toggle = "modal" title="Add Control" data-target = "#addControl" style="visibility:hidden"><i class="fa fa-plus"></i></a>
                    }
                    @if (Perm != null && Perm.Any(q => q.IsSubmit1 == true) || Perm != null && Perm.Any(q => q.IsSubmit2 == true) || isSuperAdmin)
                    {
                        @*if (Model.Status.Contains("Review"))
                        {   
                            @Html.ActionLink("Set Review", "SetControlReview", new { id = "0"}, new { @id = "LinkSetReview", @class = "btn yellow-mint", data_toggle = "modal", title="Set Review", data_target = "#setControlReview" })
                            <a href="#" class="btn btn-icon-only green" data-toggle = "modal" title="Add Control" data-target = "#addControl" style="visibility:hidden"><i class="fa fa-plus"></i></a>
                        }*@
                    }
                    <select multiple class="form-control" id="controllist" onchange="javascript:GetAuditStepByRiskControlId(this.value);"></select>
                </div>
            </div>
            <div class="col-md-5">
                <div class="form-group">
                    <label>Audit Step</label>
                    @if (Perm != null && Perm.Any(q => q.IsCreate == true) || isSuperAdmin)
                    {
                        if (Model.Status == "Draft")
                        {
                            <a href="#" class="btn btn-icon-only green" data-toggle = "modal" title ="Add Audit Step" data-target = "#addAudit" id="addAuditStep" ><i class="fa fa-plus"></i></a>
                            <a href="#" class="btn btn-icon-only yellow" data-toggle = "modal" title ="Edit Audit Step" data-target = "#editAudit"><i class="fa fa-edit"></i></a>
                            <a href="#" class="btn btn-icon-only red"  title ="Delete Audit Step " id="delAudit" data-original-title="Are you sure to delete this Audit Step?" onclick="javascript:delAudit()"><i class="fa fa-times"></i></a>   
                        }
                    } else {
                            <a href="#" class="btn btn-icon-only green" data-toggle = "modal" title ="Add Audit Step" data-target = "#addAudit" id="addAuditStep" style="visibility:hidden" ><i class="fa fa-plus"></i></a>
                    }
                    <a href="@Url.Action("AddDetailIssue", "FieldWorks", new { id = "0" })", id = "AddDetailIssue", class = "btn btn-icon-only grey-cascade", data-toggle = "modal" title ="Detail Audit Step ", data-target = "#addDetailIssue">
                                <i class="fa fa-link"></i>
                            </a>
                    @*<select multiple class="form-control" id="auditlist" onchange="javascript:$('#auditName').val($('#auditlist option:selected').text()); $('#LinkSetReview').attr('href', '/ConsultingFieldWorks/SetControlReview/0');"></select>*@
                    <textarea aria-invalid="false" class="form-control valid" readonly="True" style= "margin: 0px -0.5px 0px 0px; height: 95px; width: 418px;" id="auditlist" onchange="javascript:$('#auditName').val($('#auditlist option:selected').text()); $('#LinkSetReview').attr('href', '/ConsultingFieldWorks/SetControlReview/0');"> </textarea>
                </div>
            </div>
        </div>
    </div>
    <div id="addRisk" class="modal fade" tabindex="-1" data-width="700">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
            <h4 class="modal-title">Add Risk</h4>
        </div>
        <div class="modal-body">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.Label("Risk Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.TextBox("risk", null, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" data-dismiss="modal" class="btn btn-outline dark">Close</button>
            <button type="button" class="btn green" onclick="javascript:SaveRisk($('#ConsultingRCMID').val(), $('#risk').val());">Save</button>
        </div>
    </div>

    <div id="editRisk" class="modal fade" tabindex="-1" data-width="700">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
            <h4 class="modal-title">Edit Risk</h4>
        </div>
        <div class="modal-body">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.Label("Risk Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.TextBox("riskname", null, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" data-dismiss="modal" class="btn btn-outline dark">Close</button>
            <button type="button" class="btn green" onclick="javascript:UpdateRisk($('#ConsultingRCMID').val(), $('#riskId option:selected').val(), $('#riskname').val());">Save</button>
        </div>
    </div>

    <div id="addControl" class="modal fade" tabindex="-1" data-width="700">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
            <h4 class="modal-title">Add Control</h4>
        </div>
        <div class="modal-body">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.Label("Control Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.TextBox("control", null, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" data-dismiss="modal" class="btn btn-outline dark">Close</button>
            <button type="button" class="btn green" onclick="javascript:SaveControl($('#riskId option:selected').val(), $('#control').val());">Save</button>
        </div>
    </div>

    <div id="editControl" class="modal fade" tabindex="-1" data-width="700">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
            <h4 class="modal-title">Edit Control</h4>
        </div>
        <div class="modal-body">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.Label("Control Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.TextBox("controlName", null, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" data-dismiss="modal" class="btn btn-outline dark">Close</button>
            <button type="button" class="btn green" onclick="javascript:UpdateControl($('#riskId option:selected').val(), $('#controllist option:selected').val(), $('#controlName').val());">Save</button>
        </div>
    </div>
    
    <div id="setStatus" class="modal fade" tabindex="-1" data-width="700">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
            <h4 class="modal-title">Set Status for This Control</h4>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn red" onclick="javascript:SetControlStatus($('#riskId option:selected').val(), $('#controllist option:selected').val(), 'Failed');">Failed</button>
            <button type="button" class="btn grey-cascade" onclick="javascript:SetControlStatus($('#riskId option:selected').val(), $('#controllist option:selected').val(), 'Not Passes');">Not Asses</button>
            <button type="button" class="btn green" onclick="javascript:SetControlStatus($('#riskId option:selected').val(), $('#controllist option:selected').val(), 'Passes');">Passes</button>
        </div>
    </div>

    <div id="setControlReview" class="modal fade" tabindex="-1" data-width="700">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
            <h4 class="modal-title">Review Note</h4>
        </div>
        <div class="modal-body"></div>
        <div class="modal-footer">
            <button type="button" class="btn red" onclick="javascript:SetControlReview($('#riskId option:selected').val(), $('#controllist option:selected').val(), 'Review Not OK');">Review Not OK</button>
            <button type="button" class="btn green" onclick="javascript:SetControlReview($('#riskId option:selected').val(), $('#controllist option:selected').val(), 'Review OK');">Review OK</button>
        </div>
    </div>

    <div id="addDetailIssue" class="modal fade" tabindex="-1" data-width="1200" data-backdrop="static">
        <div class="modal-header">
            @*<button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>*@
            <h4 class="modal-title"></h4>
        </div>
        <div class="modal-body"></div>
    </div>

    <div id="addAudit" class="modal fade" tabindex="-1" data-width="700">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
            <h4 class="modal-title">Add Audit Step</h4>
        </div>
        <div class="modal-body">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.Label("Audit Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.TextArea("audit", null, new { @class = "form-control", @rows = "7", @style="width:500px" })
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" data-dismiss="modal" class="btn btn-outline dark">Close</button>
            <button type="button" class="btn green" onclick="javascript:SaveAudit($('#controllist option:selected').val(), $('#audit').val());">Save</button>
        </div>
    </div>

    <div id="editAudit" class="modal fade" tabindex="-1" data-width="700">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
            <h4 class="modal-title">Edit Audit Step</h4>
        </div>
        <div class="modal-body">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.Label("Audit Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-5">
                        @Html.TextArea("auditName", null, new { @class = "form-control", @rows = "7", @style="width:500px" })
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" data-dismiss="modal" class="btn btn-outline dark">Close</button>
            <button type="button" class="btn green" onclick="javascript:UpdateAudit($('#controllist option:selected').val(),$('#auditName').val());">Save</button>
        </div>
    </div>

    <div id="ListIssue" class="modal fade" tabindex="-1" data-width="760">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
            <h4 class="modal-title">List Issue</h4>
        </div>
        <div class="modal-body">
            <div class="form-horizontal">
                <table class="table table-striped table-hover table-bordered" id="table-editissue">
                    <thead>
                        <tr>
                            <th>
                                No Ref
                            </th>
                            <th>
                                Issue
                            </th>
                            <th>
                                Fact
                            </th>
                            <th>
                                Status Approval
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in ViewBag.Issues)
                        {
                            <tr>
                                <td style="display:none">
                                    @item.ConsultingRCMDetailRiskControlIssueID
                                </td>
                                <td>
                                    <a href="../EditStatus/@item.ConsultingRCMDetailRiskControlIssueID" data-toggle="modal" data-target="#editResponse">@Html.Raw(item.NoRef)</a>
                                </td>
                                <td>
                                    @item.Title
                                </td>
                                <td>
                                    @Html.Raw(item.Fact)
                                </td>
                                <td>
                                    @if (item.Status_Approval == null)
                                    {
                                        @Html.DisplayName("Pending")
                                    }
                                    else
                                    {
                                        @item.Status_Approval
                                    }

                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>
        </div>
        <div class="modal-footer">
            <button type="button" data-dismiss="modal" class="btn btn-outline dark">Close</button>
        </div>
    </div>

    <div id="ListAuditQuery" class="modal fade" tabindex="-1" data-width="760">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
            <h4 class="modal-title">list audit query</h4>
        </div>
        <div class="modal-body">
            <div class="form-horizontal">
                <table class="table table-striped table-hover table-bordered" id="table-auditquery">
                    <thead>
                        <tr>
                            <th>
                                audit query no
                            </th>
                            <th>
                                judul
                            </th>
                            <th>
                                status
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (ePatria.Models.ConsultingAuditQuery item in ViewBag.auditquery)
                        {
                            <tr>
                                <td>
                                    <a href="@Url.Action("AddDetailIssue", "ConsultingFieldWorks", new { id = @item.ConsultingRCMDetailRiskControlDetail.ConsultingRCMDetailRiskControlID })" , id="AddDetailIssue" , data-toggle="modal" title="Detail Audit Step " , data-target="#addDetailIssue">
                                        @item.No
                                    </a>
                                </td>
                                <td>
                                    @item.Perihal
                                </td>
                                <td>
                                    @item.Status
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>
        </div>
        <div class="modal-footer">
            <button type="button" data-dismiss="modal" class="btn btn-outline dark">close</button>
        </div>
    </div>

    <div id="editResponse" class="modal fade" tabindex="-1" data-width="700">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
            <h4 class="modal-title">Approval Issue</h4>
        </div>
        <div class="modal-body">

        </div>
        <div class="modal-footer">
            <button type="button" data-dismiss="modal" class="btn btn-outline dark">Close</button>
        </div>
    </div>

    <div class="modal-footer" style="border-top-style:none;">
        <div><h4><span style="float:left">Progress Control Status Per Risk : </span><label id="percentperrisk">0 %</label></h4></div>
        @*<div><h4><span style="float:left">Progress Control Review Status Per Risk : </span><label id="percentreviewperrisk">0 %</label></h4></div>*@
        <div class="total"><h4><span style="float:left">Progress All Control Status Per Risk : </span><label id="percentallstatus">@ViewBag.ControlCount.ToString("0") %</label></h4></div>
        @*<div class="total"><h4><span style="float:left">Progress All Control Review Status Per Risk : </span><label id="percentallreview">@ViewBag.reviewedCount.ToString("0") %</label></h4></div>*@
        @if (checkPerm.Contains("IsSubmit1"))
        {
            if (Perm != null && Perm.Any(q => q.IsSubmit1 == true) || isSuperAdmin)
            {
                if (Model.Status == "Pending for Review by " + checkPerm.Split(':')[1].Split(';')[0])
                {
                    if (checkPerm.Split(':')[1].Split(';')[0] == "Member")
                    {
                        if (Model.ConsultingLetterOfCommand.MemberID != null)
                        {
                            if (Model.ConsultingLetterOfCommand.MemberID.Contains(empName) || isSuperAdmin)
                            {
                                if (checkPerm.Contains("IsSubmit2"))
                                {
                                    <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[2].Split(';')[0]">Submit</button>
                                    @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[2].Split(';')[0]" />*@
                                    @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />*@
                                }
                                else if (checkPerm.Contains("IsApprove"))
                                {
                                    <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]">Submit</button>
                                    @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]" />*@
                                    @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />*@
                                }
                            }
                        }
                        else
                        {
                            if (checkPerm.Contains("IsSubmit2"))
                            {
                                <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[2].Split(';')[0]">Submit</button>
                                @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[2].Split(';')[0]" />*@
                                @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />*@
                            }
                            else if (checkPerm.Contains("IsApprove"))
                            {
                                <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]">Submit</button>
                                @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]" />*@
                                @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />*@
                            }
                        }
                    }
                    if (checkPerm.Split(':')[1].Split(';')[0] == "Ketua Tim")
                    {
                        if (Model.ConsultingLetterOfCommand.TeamLeaderID != null)
                        {
                            if (Model.ConsultingLetterOfCommand.TeamLeaderID == empName || isSuperAdmin)
                            {
                                if (checkPerm.Contains("IsSubmit2"))
                                {
                                    <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[2].Split(';')[0]">Submit</button>
                                    @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[2].Split(';')[0]" />*@
                                    @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />*@
                                }
                                else if (checkPerm.Contains("IsApprove"))
                                {
                                    <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]">Submit</button>
                                    @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]" />*@
                                    @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />*@
                                }
                            }
                        }
                        else
                        {
                            if (checkPerm.Contains("IsSubmit2"))
                            {
                                <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[2].Split(';')[0]">Submit</button>
                                @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[2].Split(';')[0]" />*@
                                @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />*@
                            }
                            else if (checkPerm.Contains("IsApprove"))
                            {
                                <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]">Submit</button>
                                @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]" />*@
                                @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />*@
                            }
                        }
                    }
                    if (checkPerm.Split(':')[1].Split(';')[0] == "Pengawas")
                    {
                        if (Model.ConsultingLetterOfCommand.SupervisorID != null)
                        {
                            if (Model.ConsultingLetterOfCommand.SupervisorID == empName || isSuperAdmin)
                            {
                                if (checkPerm.Contains("IsSubmit2"))
                                {
                                    <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[2].Split(';')[0]">Submit</button>
                                    @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[2].Split(';')[0]" />*@
                                    @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />*@
                                }
                                else if (checkPerm.Contains("IsApprove"))
                                {
                                    <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]">Submit</button>
                                    @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]" />*@
                                    @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />*@
                                }
                            }
                        }
                        else
                        {
                            if (checkPerm.Contains("IsSubmit2"))
                            {
                                <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[2].Split(';')[0]">Submit</button>
                                @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[2].Split(';')[0]" />*@
                                @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />*@
                            }
                            else if (checkPerm.Contains("IsApprove"))
                            {
                                <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]">Submit</button>
                                @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]" />*@
                                @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />*@
                            }
                        }
                    }
                    if (checkPerm.Split(':')[1].Split(';')[0] == "CIA")
                    {
                        if (Model.ConsultingLetterOfCommand.PicID != null)
                        {
                            if (Model.ConsultingLetterOfCommand.PicID == empName || isSuperAdmin)
                            {
                                if (checkPerm.Contains("IsSubmit2"))
                                {
                                    <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[2].Split(';')[0]">Submit</button>
                                    @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[2].Split(';')[0]" />*@
                                    @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />*@
                                }
                                else if (checkPerm.Contains("IsApprove"))
                                {
                                    <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]">Submit</button>
                                    @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]" />*@
                                    @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />*@
                                }
                            }
                        }
                        else
                        {
                            if (checkPerm.Contains("IsSubmit2"))
                            {
                                <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[2].Split(';')[0]">Submit</button>
                                @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[2].Split(';')[0]" />*@
                                @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />*@
                            }
                            else if (checkPerm.Contains("IsApprove"))
                            {
                                <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]">Submit</button>
                                @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]" />*@
                                @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />*@
                            }
                        }
                    }
                }
            }
        }
        @if (checkPerm.Contains("IsSubmit2"))
        {
            if (Perm != null && Perm.Any(q => q.IsSubmit2 == true) || isSuperAdmin)
            {
                if (Model.Status == "Pending for Review by " + checkPerm.Split(':')[2].Split(';')[0])
                {
                    if (checkPerm.Split(':')[2].Split(';')[0] == "Member")
                    {
                        if (Model.ConsultingLetterOfCommand.MemberID != null)
                        {
                            if (Model.ConsultingLetterOfCommand.MemberID.Contains(empName) || isSuperAdmin)
                            {
                                if (checkPerm.Contains("IsApprove"))
                                {
                                    <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]">Submit</button>
                                    @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]" />*@
                                    if (checkPerm.Split(':')[1].Split(';')[0] != checkPerm.Split(':')[2].Split(';')[0]) {
                                        <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (checkPerm.Contains("IsApprove"))
                            {
                                <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]">Submit</button>
                                @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]" />*@
                                if (checkPerm.Split(':')[1].Split(';')[0] != checkPerm.Split(':')[2].Split(';')[0]) {
                                    <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />
                                }
                            }
                        }
                    }
                    if (checkPerm.Split(':')[2].Split(';')[0] == "Ketua Tim")
                    {
                        if (Model.ConsultingLetterOfCommand.TeamLeaderID != null)
                        {
                            if (Model.ConsultingLetterOfCommand.TeamLeaderID == empName || isSuperAdmin)
                            {
                                if (checkPerm.Contains("IsApprove"))
                                {
                                    <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]">Submit</button>
                                    @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]" />*@
                                    if (checkPerm.Split(':')[1].Split(';')[0] != checkPerm.Split(':')[2].Split(';')[0]) {
                                        <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (checkPerm.Contains("IsApprove"))
                            {
                                <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]">Submit</button>
                                @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]" />*@
                                if (checkPerm.Split(':')[1].Split(';')[0] != checkPerm.Split(':')[2].Split(';')[0]) {
                                    <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />
                                }
                            }
                        }
                    }
                    if (checkPerm.Split(':')[2].Split(';')[0] == "Pengawas")
                    {
                        if (Model.ConsultingLetterOfCommand.SupervisorID != null)
                        {
                            if (Model.ConsultingLetterOfCommand.SupervisorID == empName || isSuperAdmin)
                            {
                                if (checkPerm.Contains("IsApprove"))
                                {
                                    <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]">Submit</button>
                                    @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]" />*@
                                    if (checkPerm.Split(':')[1].Split(';')[0] != checkPerm.Split(':')[2].Split(';')[0]) {
                                        <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (checkPerm.Contains("IsApprove"))
                            {
                                <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]">Submit</button>
                                @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]" />*@
                                if (checkPerm.Split(':')[1].Split(';')[0] != checkPerm.Split(':')[2].Split(';')[0]) {
                                    <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />
                                }
                            }
                        }
                    }
                    if (checkPerm.Split(':')[2].Split(';')[0] == "CIA")
                    {
                        if (Model.ConsultingLetterOfCommand.PicID != null)
                        {
                            if (Model.ConsultingLetterOfCommand.PicID == empName || isSuperAdmin)
                            {
                                if (checkPerm.Contains("IsApprove"))
                                {
                                    <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]">Submit</button>
                                    @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]" />*@
                                    if (checkPerm.Split(':')[1].Split(';')[0] != checkPerm.Split(':')[2].Split(';')[0]) {
                                        <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />
                                    }
                                }
                            }
                        }
                        else
                        {
                            if (checkPerm.Contains("IsApprove"))
                            {
                                <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]">Submit</button>
                                @*<input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]" />*@
                                if (checkPerm.Split(':')[1].Split(';')[0] != checkPerm.Split(':')[2].Split(';')[0]) {
                                    <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />
                                }
                            }
                        }
                    }
                }
            }
        }
        @if (checkPerm.Contains("IsApprove"))
        {
            if (Perm != null && Perm.Any(q => q.IsApprove == true) || isSuperAdmin)
            {
                if (Model.Status == "Pending for Approve by " + checkPerm.Split(':')[3].Split(';')[0])
                {
                    if (checkPerm.Split(':')[3].Split(';')[0] == "Member")
                    {
                        if (Model.ConsultingLetterOfCommand.MemberID != null)
                        {
                            if (Model.ConsultingLetterOfCommand.MemberID.Contains(empName) || isSuperAdmin)
                            {
                                <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Approve" />
                                <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />
                            }
                        } else {
                            <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Approve" />
                            <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />
                        }
                    }
                    if (checkPerm.Split(':')[3].Split(';')[0] == "Ketua Tim")
                    {
                        if (Model.ConsultingLetterOfCommand.TeamLeaderID != null)
                        {
                            if (Model.ConsultingLetterOfCommand.TeamLeaderID == empName || isSuperAdmin)
                            {
                                <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Approve" />
                                <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />
                            }
                        } else {
                            <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Approve" />
                            <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />
                        }
                    }
                    if (checkPerm.Split(':')[3].Split(';')[0] == "Pengawas")
                    {
                        if (Model.ConsultingLetterOfCommand.SupervisorID != null)
                        {
                            if (Model.ConsultingLetterOfCommand.SupervisorID == empName || isSuperAdmin)
                            {
                                <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Approve" />
                                <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />
                            }
                        } else {
                            <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Approve" />
                            <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />
                        }
                    }
                    if (checkPerm.Split(':')[3].Split(';')[0] == "CIA")
                    {
                        if (Model.ConsultingLetterOfCommand.PicID != null)
                        {
                            if (Model.ConsultingLetterOfCommand.PicID == empName || isSuperAdmin)
                            {
                                <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Approve" />
                                <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />
                            }
                        } else {
                            <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Approve" />
                            <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Send Back" />
                        }
                    }
                }
            }
        }
        @if (Perm != null && Perm.Any(q => q.IsUpdate == true) || isSuperAdmin)
        {
            if (Model.Status == "Draft" || Model.Status == "Submit for Review by " + @checkPerm.Split(':')[1].Split(';')[0])
            {
                if (Perm.Any(d => d.IsCreate))
                {
                    if (Perm.Any(d => d.IsSubmit1))
                    {
                        if (checkPerm.Contains("IsSubmit2"))
                        {
                            <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[2].Split(';')[0]"> Submit</button>
                        }
                        else if (checkPerm.Contains("IsApprove"))
                        {
                            <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]"> Submit</button>
                        }
                    }
                    else
                    {
                        <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[1].Split(';')[0]"> Submit</button>
                    }
                }
                else if (Perm.Any(d => d.IsSubmit1))
                {
                    if (checkPerm.Contains("IsSubmit2"))
                    {
                        <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[2].Split(';')[0]"> Submit</button>
                    }
                    else if (checkPerm.Contains("IsApprove"))
                    {
                        <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]"> Submit</button>
                    }
                }
                else if (Perm.Any(d => d.IsSubmit2))
                {
                    if (checkPerm.Contains("IsApprove"))
                    {
                        <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]"> Submit</button>
                    }
                }
                
                @*if (checkPerm.Contains("IsSubmit1"))
                {
                    <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[1].Split(';')[0]" />
                }
                else if (checkPerm.Contains("IsSubmit2"))
                {
                    <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[2].Split(';')[0]" />
                }
                else if (checkPerm.Contains("IsApprove"))
                {
                     <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]" />
                }*@
                <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Save" />
            }
        }
        <button type="button" class="btn green" data-toggle="modal" , data-target="#ListIssue">List Issue</button>
        <button type="button" class="btn green" data-toggle="modal" , data-target="#ListAuditQuery">List Audit Query</button>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*Review Note*@

<h2>Review Notes</h2>

<div class="publishContainer">
    <textarea class="msgTextArea" id="txtMessage" data-bind="value: newMessage, jqAutoresize: {}" style="height:3em;" placeholder="Write your comment..."></textarea>
    <div class="btn-group ">
        <button class="btn btn-primary btn-lg" data-url="/Wall/SavePost" value="Comment" id="btnShare" data-bind="click: addPost">Comment</button>
        <input type="hidden" data-bind="value: apmId" class="apmId" value="@Model.ConsultingFieldWorkID" />
        @{
            int apmId = Model.ConsultingFieldWorkID;
        }
        <script>
            localStorage.apmId = 'conleterdetail' + '@apmId';
        </script>
    </div>
</div>

<ul id="msgHolder" data-bind="foreach: posts">
    <li class="postHolder">
        <img data-bind="attr: { src: '../../Content/assets/global/img/avatar3_small.jpg' }"><a data-bind="    text: PostedByName"></a>: <span data-bind="    html: Message"></span>
        <div class="postFooter">
            <span class="timeago" data-bind="text: PostedDate"></span>&nbsp;<a class="linkComment" href="#" data-bind="    click: toggleComment">Reply</a>
            <div class="commentSection">
                <ul data-bind="foreach: PostComments">
                    <li class="commentHolder">
                        <img data-bind="attr: { src: '../../Content/assets/global/img/avatar3_small.jpg' }"><a data-bind="    text: CommentedByName"></a>: <span data-bind="    html: Message"></span>
                        <div class="commentFooter"> <span class="timeago" data-bind="text: CommentedDate"></span>&nbsp;</div>
                    </li>
                </ul>
                <div style="display: block" class="publishComment">
                    <textarea class="commentTextArea" data-bind="value: newCommentMessage, jqAutoresize: {}" placeholder="Write your reply..."></textarea>
                    <input type="button" value="Reply" class="btn blue" data-bind="click: addComment" />
                </div>
            </div>
        </div>
    </li>
</ul>
@section Scripts {
    <script src="~/Scripts/jquery.autosize-min.js"></script>
    <script src="~/Scripts/jquery.timeago.js"></script>
    <script src="~/Scripts/knockout-3.4.0.js"></script>
    <script src="~/Scripts/wallpost.js"></script>

    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $("#cfieldworkform").validate({
        errorLabelContainer: $("ul", $('div.error-container')),
        wrapper: 'li',
        rules: {
            ConsultingBPM: "required",
            ConsultingSubBP: "required",
            ConsultingObj: "required",
            controllist: "required",
        },
        messages: {
            ConsultingBPM: "Please enter Consulting BPM",
            ConsultingSubBP: "Please enter Consulting Sub Business Process",
            ConsultingObj: "Please enter Objectives",
            controllist : "Please enter Control",
        }
    });
    </script>
}

<script>

    var pending = true;
    window.onload = view();
    var globalcontrolId;
    function view() {
        var valueRiskId = $('#riskId option:first-child').attr("selected", "selected").val();
        if (valueRiskId != null) {
            getControlView(valueRiskId);
            var valueControl = $('#controllist option:first-child').attr("selected", "selected").val();
            if (valueControl != null) {
                GetAuditStepByRiskControlId(valueControl);
            }
        }
        if ($("#percentallstatus").text() == "100 %") {
            $("#submit").show();
        }
        else {
            $("#submit").hide();
        }
    }
    function cekControl() {
        $('#riskId option').each(function () {
            GetControl($(this).attr('value'));
        });
        if (pending == true) { $("#LinkSetReview").removeClass("disabled"); }
        else if (pending == false) { $("#LinkSetReview").addClass("disabled"); }
    }
    function getControlView(_riskId) {
        $("#riskname").val($("#riskId option:selected").text());
        //$("#LinkSetReview").attr("href", "/FieldWorks/SetControlReview/0");
        //$("#AddDetailIssue").attr("href", "/FieldWorks/AddDetailIssue/0");
        $("#auditlist").html("");
        $.ajax({
            url: "../GetControlsByRiskId/",
            data: { riskId: _riskId },
            cache: false,
            type: "POST",
            async: false,

            success: function (data) {
                var markup = "";
                var text = "";
                var review = false;
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option >";
                }
                if (markup.indexOf("Pending") != -1) {
                    pending = false;
                }
                $("#controllist").html(markup).show();
                $('#auditlist').val("");
                var percentageControl = GetControlStatusCountByRisk(_riskId) / data.length * 100;
                $("#percentperrisk").text(parseInt(percentageControl) + " %");
                var percentageReview = GetCountReviewByRiskId(_riskId) / data.length * 100;
                $("#percentreviewperrisk").text(parseInt(percentageReview) + " %");
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }

        });
    }
    function GetControl(_riskId) {
        $("#riskname").val($("#riskId option:selected").text());
        //$("#LinkSetReview").attr("href", "/FieldWorks/SetControlReview/0");
        //$("#AddDetailIssue").attr("href", "/FieldWorks/AddDetailIssue/0");
        $("#auditlist").html("");
        $.ajax({
            url: "../GetControlsByRiskId/",
            data: { riskId: _riskId },
            cache: false,
            type: "POST",
            async: false,

            success: function (data) {
                var markup = "";
                var text = "";
                var review = false;
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                if (markup.indexOf("Pending") != -1) {
                    pending = false;
                }
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }

        });
    }

    function GetControlStatusCountByRisk(_riskId) {
        var count = 0;
        $.ajax({
            url: "../GetCountStatusByRiskId/",
            data: { riskId: _riskId },
            cache: false,
            async: false,
            type: "POST",

            success: function (data) {
                count = data;
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });
        return count;
    }

    function GetCountReviewByRiskId(_riskId) {
        var count = 0;
        $.ajax({
            url: "../GetCountReviewByRiskId/",
            data: { riskId: _riskId },
            cache: false,
            async: false,
            type: "POST",

            success: function (data) {
                count = data;
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });
        return count;
    }

    function GetAllStatusAndReviewControl(_rcmId) {
        var count = 0;
        $.ajax({
            url: "../GetAllStatusAndReviewControl/",
            data: { rcmId: _rcmId },
            cache: false,
            async: false,
            type: "POST",

            success: function (data) {
                count = data;
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });
        return count;
    }
    function GetControlByRiskId(_riskId) {
        $("#riskname").val($("#riskId option:selected").text());
        $("#LinkSetReview").attr("href", "/ConsultingFieldWorks/SetControlReview/0");
        $("#AddDetailIssue").attr("href", "/ConsultingFieldWorks/AddDetailIssue/0");
        $("#auditlist").val("");
        $.ajax({
            url: "../GetControlsByRiskId/",
            data: { riskId: _riskId },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                $("#controllist").html(markup).show();
                $('#auditlist').val("");
                var percentageControl = GetControlStatusCountByRisk(_riskId) / data.length * 100;
                $("#percentperrisk").text(parseInt(percentageControl) + " %");
                var percentageReview = GetCountReviewByRiskId(_riskId) / data.length * 100;
                $("#percentreviewperrisk").text(parseInt(percentageReview) + " %");

            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });
    }
    function GetAuditStepByRiskControlId(_controlId) {
        $("#controlName").val($("#controllist option:selected").text().split('-')[0]);
        $("#LinkSetReview").attr("href", "/ConsultingFieldWorks/SetControlReview/" + _controlId);
        $("#AddDetailIssue").attr("href", "/ConsultingFieldWorks/AddDetailIssue/" + _controlId);
        globalcontrolId = _controlId;
        $.ajax({
            url: "../GetAuditStepByRiskControlId/",
            data: { controlId: _controlId },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "";
                for (var x = 0; x < data.length; x++) {
                    //markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    markup = data[x].Text;
                }
                $("#auditlist").val(markup);
                $("#auditName").val(markup);
                if (markup == "") {
                    $("#addAuditStep").removeClass("disabled");
                } else {
                    $("#addAuditStep").addClass("disabled");
                }
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });
    }
    function SaveRisk(_rcmId, _riskName) {
        if ($("#ConsultingBPM").val() == "" || $("#ConsultingSubBP").val() == "" || $("#ConsultingObj").val() == "")
        {
            alert("Please fill Business Process and Sub Business Process and Objectives.")
            return false;
        }
        if ($("#risk").val() == "" ){
            alert("Please Fill Name Risk.")
            return false;
        }
        var BPM = $("#ConsultingBPM").val();
        var subBP = $("#ConsultingSubBP").val();
        var obj = $("#ConsultingObj").val();
        var fwId = $("#ConsultingFieldWorkID").val();
        if (!_rcmId) 
            _rcmId = $("#newRCMId").val();
        $.ajax({
            url: "../SaveRisk/",
            data: {
                rcmId: _rcmId,
                riskName: _riskName,
                bpm: BPM,
                subbp: subBP,
                obj: obj,
                fwid: fwId
            },
            cache: false,
            type: "POST",
            success: function (data) {
                $("#ConsultingRCMID").val(data.rcmId);
                var markup = "";
                for (var x = 0; x < data.Result.length; x++) {
                    markup += "<option value=" + data.Result[x].Value + ">" + data.Result[x].Text + "</option>";
                }
                $("#riskId").html(markup).show();
                $('#addRisk').modal('hide');
                $("#ConsultingBPM").attr('readonly', true);
                $("#ConsultingSubBP").attr('readonly', true);
                $("#ConsultingObj").attr('readonly', true);
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });
    }

    function UpdateRisk(_rcmId, _riskId, _riskName) {
        if ($("#riskname").val() == "") {
            alert("Please Fill Name Risk.")
            return false;
        }
        $.ajax({
            url: "../UpdateRisk/",
            data: {
                rcmId: _rcmId,
                riskId: _riskId,
                riskName: _riskName
            },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                $("#riskId").html(markup).show();
                $('#editRisk').modal('hide');
                $("#riskname").val("");
            },
            error: function (reponse) {
                //alert("error : " + reponse);
                alert("Please select a Risk first");
            }
        });
    }

    function DeleteRisk(_rcmId, _riskId) {
        $.ajax({
            url: "../DeleteRisk/",
            data: {
                rcmId: _rcmId,
                riskId: _riskId
            },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                $("#riskId").html(markup).show();
                $("#controllist").html("");
                $("#auditlist").html("");
                var percentageControl = GetControlStatusCountByRisk(_riskId) / data.length * 100;
                $("#percentperrisk").text(parseInt(percentageControl) + " %");
                var percentageReview = GetCountReviewByRiskId(_riskId) / data.length * 100;
                $("#percentreviewperrisk").text(parseInt(percentageReview) + " %");
                var percentageAllControl = GetAllStatusAndReviewControl($('#ConsultingRCMID').val());
                $("#percentallstatus").text(parseInt(percentageAllControl.split(";")[0]) + " %");
                $("#percentallreview").text(parseInt(percentageAllControl.split(";")[1]) + " %");
                if ($("#percentallstatus").text() == "100 %") {
                    $("#submit").show();
                }
                else {
                    $("#submit").hide();
                }
            },
            error: function (reponse) {
                //alert("error : " + reponse);
                alert("Please select a Risk first");
            }
        });
    }

    function SaveControl(_riskId, _controlName) {
        if ($("#control").val() == "") {
            alert("Please Fill Control Name")
            return false;
        }
        $.ajax({
            url: "../SaveControl/",
            data: {
                riskId: _riskId,
                controlName: _controlName
            },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                $('#LinkSetReview').addClass('disabled');
                $('#controllist').html(markup).show();
                $('#addControl').modal('hide');
                var percentageControl = GetControlStatusCountByRisk(_riskId) / data.length * 100;
                $("#percentperrisk").text(parseInt(percentageControl) + " %");
                var percentageReview = GetCountReviewByRiskId(_riskId) / data.length * 100;
                $("#percentreviewperrisk").text(parseInt(percentageReview) + " %");
                var percentageAllControl = GetAllStatusAndReviewControl($('#ConsultingRCMID').val());
                $("#percentallstatus").text(parseInt(percentageAllControl.split(";")[0]) + " %");
                $("#percentallreview").text(parseInt(percentageAllControl.split(";")[1]) + " %");
                if ($("#percentallstatus").text() == "100 %") {
                    $("#submit").show();
                }
                else {
                    $("#submit").hide();
                }
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });
    }

    function UpdateControl(_riskId, _controlId, _controlName) {
        if ($("#controlName").val() == "") {
            alert("Please Fill Name Control.")
            return false;
        }
        $.ajax({
            url: "../UpdateControl/",
            data: {
                riskId: _riskId,
                controlId: _controlId,
                controlName: _controlName
            },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                $("#controllist").html(markup).show();
                $('#editControl').modal('hide');
                $("#controlName").val("");
            },
            error: function (reponse) {
                //alert("error : " + reponse);
                alert("Please select a Control first");
            }
        });
    }

    function SetControlStatus(_riskId, _controlId, _status) {
        $.ajax({
            url: "../SetControlStatus/",
            data: {
                riskId: _riskId,
                controlId: _controlId,
                controlStatus: _status
            },
            cache: false,
            type: "POST",
            success: function (data) {
                $('#setStatus').modal('hide');
                if (_status == "Failed") {
                    localStorage["controlstatus"] = "Failed";
                    $('#AddDetailIssue').trigger('click');
                    //$('#addDetailIssue').find('li').removeClass('active');
                } else {
                    localStorage.removeItem("controlstatus");
                }
                var markup = "";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                pending = true;
                cekControl();
                $('#controllist').html(markup).show();
                var percentageControl = GetControlStatusCountByRisk(_riskId) / data.length * 100;
                $("#percentperrisk").text(parseInt(percentageControl) + " %");
                var percentageAllControl = GetAllStatusAndReviewControl($('#ConsultingRCMID').val());
                $("#percentallstatus").text(parseInt(percentageAllControl.split(";")[0]) + " %");
                if ($("#percentallstatus").text() == "100 %") {
                    $("#submit").show();
                }
                else {
                    $("#submit").hide();
                }
            },
            error: function (reponse) {
                //alert("error : " + reponse);
                alert("Please select a Control first");
            }
        });
    }

    function SetControlReviewStatus(_riskId, _controlId, _status) {
        $.ajax({
            url: "../SetControlReviewStatus/",
            data: {
                riskId: _riskId,
                controlId: _controlId,
                controlReviewStatus: _status
            },
            cache: false,
            type: "POST",
            success: function (data) {
                $('#setControlReview').modal('hide');
                var markup = "";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                pending = true;
                cekControl();
                $('#controllist').html(markup).show();
                var percentageReview = GetCountReviewByRiskId(_riskId) / data.length * 100;
                $("#percentreviewperrisk").text(parseInt(percentageReview) + " %");
                var percentageAllControl = GetAllStatusAndReviewControl($('#ConsultingRCMID').val());
                $("#percentallreview").text(parseInt(percentageAllControl.split(";")[1]) + " %");
            },
            error: function (reponse) {
                //alert("error : " + reponse);
                alert("Please select a Control first");
            }
        });
    }

    function DeleteControl(_riskId, _controlId) {
        $.ajax({
            url: "../DeleteControl/",
            data: {
                riskId: _riskId,
                controlId: _controlId
            },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                pending = true;
                cekControl();
                $("#controllist").html(markup).show();
                $("#auditlist").html("");
                var percentageControl = GetControlStatusCountByRisk(_riskId) / data.length * 100;
                $("#percentperrisk").text(parseInt(percentageControl) + " %");
                var percentageReview = GetCountReviewByRiskId(_riskId) / data.length * 100;
                $("#percentreviewperrisk").text(parseInt(percentageReview) + " %");
                var percentageAllControl = GetAllStatusAndReviewControl($('#ConsultingRCMID').val());
                $("#percentallstatus").text(parseInt(percentageAllControl.split(";")[0]) + " %");
                $("#percentallreview").text(parseInt(percentageAllControl.split(";")[1]) + " %");
                if ($("#percentallstatus").text() == "100 %") {
                    $("#submit").show();
                }
                else {
                    $("#submit").hide();
                }
                if (markup.indexOf(_controlId) != -1) {
                    alert("Masih ada Workdone atau Issue");
                }

            },
            error: function (reponse) {
                //alert("error : " + reponse);
                alert("Please select a Control first");
            }
        });
    }

    function SaveControlDetail(_controlId, _workDoneDesc, _workDoneRes, _action) {
        if ($("#wdd").val() == "") {
            alert("Please Fill Work Done Description")
            return false;
        }
        if ($("#wdr").val() == "") {
            alert("Please Fill Work Done Result.")
            return false;
        }
        if (_action == "Create") {
            $.ajax({
                url: "../SaveControlDetail/",
                data: {
                    controlId: _controlId,
                    workDoneDesc: _workDoneDesc,
                    workDoneRes: _workDoneRes
                },
                cache: false,
                type: "POST",
                success: function (data) {
                    var markup = "";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#auditlist").html(markup).show();
                    $('#addDetailIssue').modal('hide');
                    location.reload();
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });
        } else {
            $.ajax({
                url: "../UpdateControlDetail/",
                data: {
                    controlId: _controlId,
                    workDoneDesc: _workDoneDesc,
                    workDoneRes: _workDoneRes
                },
                cache: false,
                type: "POST",
                success: function (data) {
                    var markup = "";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#auditlist").html(markup).show();
                    $('#addDetailIssue').modal('hide');
                    location.reload();
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });
        }
    }

    function SaveIssue(_status) {
        if (confirm("Are You Sure Want To Submit?"))
        {
            SaveControlIssue($('#controllist option:selected').val(), $('#noref').val(), $('#titl').val(),
            CKEDITOR.instances.fact.getData(), CKEDITOR.instances.cri.getData(), CKEDITOR.instances.imp.getData(), CKEDITOR.instances.impactval.getData(), CKEDITOR.instances.coz.getData(),
            CKEDITOR.instances.rec.getData(), CKEDITOR.instances.managres.getData(), $('#findtype').val(), $('#PICID').val(), 'Create', _status);
        }
        else
        {
            event.preventDefault();
        }
    }
    function SaveControlIssue(_controlId, _noref, _title, _fact, _cri, _imp, _impactval, _coz, _rec, _managres, _findtype, _pic, _action, _status) {
        //if ($("#titl").val() == "") {
        //    alert("Please Insert Title.")
        //    return false;
        //}
        //if (CKEDITOR.instances.fact.getData() === '') {
        //    alert('Please Insert Fact.');
        //    return false;
        //}
        //if (CKEDITOR.instances.cri.getData() === '') {
        //    alert('Please Insert Criteria.');
        //    return false;
        //}
        //if (CKEDITOR.instances.imp.getData() === '') {
        //    alert('Please Insert Impact.');
        //    return false;
        //}
        //if (CKEDITOR.instances.impactval.getData() === '') {
        //    alert('Please Insert Impact Value.');
        //    return false;
        //}
        //if (CKEDITOR.instances.coz.getData() === '') {
        //    alert('Please Insert Cause.');
        //    return false;
        //}
        //if (CKEDITOR.instances.rec.getData() === '') {
        //    alert('Please Insert Recommendation.');
        //    return false;
        //}
        //if (CKEDITOR.instances.managres.getData() === '') {
        //    alert('Please Insert Management Response.');
        //    return false;
        //}
        //if ($("#findtype").val() == "") {
        //    alert("Please Insert Finding Type.")
        //    return false;
        //}
        //if ($("#PICID").val() == "") {
        //    alert("Please Insert Kepada.")
        //    return false;
        //}
        if (_action == "Create") {
            $.ajax({
                url: "../SaveControlIssue/",
                data: {
                    controlId: globalcontrolId,
                    noref: _noref,
                    title: _title,
                    fact: _fact,
                    cri: _cri,
                    imp: _imp,
                    impactval: _impactval,
                    coz: _coz,
                    rec: _rec,
                    managres: _managres,
                    findtype: _findtype,
                    picName: _pic,
                    status: _status
                },
                cache: false,
                type: "POST",
                success: function (data) {
                    var markup = "";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#auditlist").html(markup).show();
                    $('#addDetailIssue').modal('hide');
                    location.reload();
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });
        } else {
            $.ajax({
                url: "../UpdateControlIssue/",
                data: {
                    controlId: globalcontrolId,
                    noref: _noref,
                    title: _title,
                    fact: _fact,
                    cri: _cri,
                    imp: _imp,
                    impactval: _impactval,
                    coz: _coz,
                    rec: _rec,
                    managres: _managres,
                    findtype: _findtype,
                    picName: _pic,
                    status: _status
                },
                cache: false,
                type: "POST",
                success: function (data) {
                    var markup = "";
                    for (var x = 0; x < data.length; x++) {
                        markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                    }
                    $("#auditlist").html(markup).show();
                    $('#addDetailIssue').modal('hide');
                    location.reload();
                },
                error: function (reponse) {
                    alert("error : " + reponse);
                }
            });
        }
    }

    function SaveAudit(_controlId, _auditName) {
        if ($("#audit").val() == "") {
            alert("Please Fill Name Audit.")
            return false;
        }
        $.ajax({
            url: "../SaveAudit/",
            data: {
                controlId: _controlId,
                auditName: _auditName
            },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "";
                for (var x = 0; x < data.length; x++) {
                    markup = data[x].Text;
                }
                $('#auditlist').val(markup);
                $('#auditName').val(markup);
                $('#addAudit').modal('hide');
                $("#addAuditStep").addClass("disabled");
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });
    }

    function UpdateAudit(_controlId, _auditName) {
        if ($("#auditName").val() == "") {
            alert("Please Fill Name Audit.")
            return false;
        }
        $.ajax({
            url: "../UpdateAudit/",
            data: {
                controlId: _controlId,
                //auditId: _auditId,
                auditName: _auditName
            },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "";
                markup = data[0].Text;
                $("#auditlist").val(markup);
                $('#editAudit').modal('hide');
                $("#auditName").val(markup);
            },
            error: function (reponse) {
                //alert("error : " + reponse);
                alert("Please select an Audit Step first");
            }
        });
    }

    function DeleteAudit(_controlId) {
        $.ajax({
            url: "../DeleteAudit/",
            data: {
                controlId: _controlId
                //auditId: _auditId
            },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "";
                for (var x = 0; x < data.length; x++) {
                    markup = data[x].Text;
                }
                $("#auditlist").val(markup);
                $("#auditName").val("");
                $("#addAuditStep").removeClass("disabled");
            },
            error: function (reponse) {
                //alert("error : " + reponse);
                alert("Please select an Audit Step first");
            }
        });
    }
    function delRisk() {
        $('#delRisk').confirmation({
            onConfirm: function () { DeleteRisk($('#ConsultingRCMID').val(), $('#riskId option:selected').val()) },
            placement: 'top'
        });
        $('#delRisk').confirmation('show');
    }
    function delControl() {
        $('#delControl').confirmation({
            onConfirm: function () { DeleteControl($('#riskId option:selected').val(), $('#controllist option:selected').val()) },
            placement: 'top'
        });
        $('#delControl').confirmation('show');
    }
    function delAudit() {
        $('#delAudit').confirmation({
            onConfirm: function () { DeleteAudit($('#controllist option:selected').val()) },
            placement: 'top'
        });
        $('#delAudit').confirmation('show');
    }
    $(function () {
        if ($("#ConsultingBPM").val() != "") {
            $("#ConsultingBPM").attr('readonly', true);
            $("#ConsultingSubBP").attr('readonly', true);
            $("#ConsultingObj").attr('readonly', true);
        }
    });
</script>
<style>
    .total > h4 {font-weight: bold;}
    .total > h4 > label {font-weight: bold;}
    .msgTextArea {
        width: 100%;
        height: 80px;
        border-radius: 7px;
    }

    .commentTextArea {
        width: 93%;
        border-radius: 7px;
        height: 40px;
    }

    .publishContainer {
        width: 65%;
        text-align: right;
        background-color: #F2F2F2;
        border-color: #B4BBCD;
        border-image: none;
        border-style: solid;
        border-width: 1px;
        padding: 1em 1.2em;
        margin-bottom: 2em;
    }

    .publishComment {
        text-align: right;
        width: 100%;
        display: none;
    }

    #msgHolder {
        width: 65%;
    }

        #msgHolder img {
            float: left;
            margin-right: 7px;
        }

        #msgHolder a {
            text-decoration: none;
            color: #015BA7;
        }

            #msgHolder a:hover {
                text-decoration: underline;
            }

    .postHolder {
        padding: 5px;
        border-bottom: solid 1px #E6E6E6;
        margin: 5px;
        list-style: none;
    }

        .postHolder p {
            margin: 4px auto 7px 50px;
        }

        .postHolder a {
            font-weight: bold;
        }

    .postFooter {
        font-size: 0.85em;
        margin-left: 55px;
    }

        .postFooter span {
            color: #7D7D84;
        }

        .postFooter a {
            font-weight: normal;
        }

    .commentHolder {
        clear: both;
        background-color: #EEF1F6;
        padding: 5px;
        border-bottom: 1px solid #DEE5EA;
        border-top: 1px solid white;
        list-style: none;
    }

    #btnShare, .btnComment, .btnRequest {
        background-color: #5B74A8;
        border: 0 none;
        color: #FFFFFF;
        cursor: pointer;
        font-size: 13px;
        font-weight: bold;
        margin-right: 10px;
        padding: 5px;
        text-align: center;
    }

    aside {
        float: right;
        width: 30%;
        font-size: 0.85em;
    }

        aside > div, #myConnections {
            border: solid 2px #3B5998;
            border-radius: 7px;
            float: left;
            width: 99%;
            margin-bottom: 5px;
        }

            aside h3, #myConnections h3 {
                background-color: #3B5998;
                color: White;
                margin: 0px;
                padding: 3px;
                font-size: 0.95em;
            }

            aside a, #myConnections a {
                text-decoration: none;
                color: #015BA7;
                font-weight: bold;
            }

                aside a:hover, #myConnections a:hover {
                    text-decoration: underline;
                }

            aside img, #myConnections img {
                float: left;
                margin-right: 7px;
            }

    .useritem {
        border-bottom: 1px solid #DEE5EA;
        clear: both;
        overflow: auto;
        padding: 3px;
    }

        .useritem p {
            margin: 4px auto 7px 55px;
        }

    .btnRequest, .btn {
        margin-top: 7px;
    }

    #myConnections {
        margin: 15px;
        width: 60%;
        font-size: 0.85em;
    }
</style>
<style>
.dl-horizontal dt{
    text-align: left;
    width: 160px;
}

.dl-horizontal dd{
    margin-left: 0;
}
</style>
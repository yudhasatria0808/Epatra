@model ePatria.Models.ConsultingLetterOfCommand

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>
@using Microsoft.AspNet.Identity;
@{
    var checkPerm = HelperController.getPermissionRoleByPerm("Consulting Surat Perintah", User.Identity.GetUserId());
    var userPerm = HelperController.getPermission(User.Identity.GetUserId(), "Consulting Surat Perintah");
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "cspform" }))
{
    @Html.ValidationSummary(true)
    <div class="form-horizontal">
        <h4>Consulting Letter Of Command</h4>
        <hr />
        <div class="error-container">
            <ul></ul>
        </div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NomorSP, "Nomor SP", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBox("NomorSP", (string)ViewBag.NomorSP, new { @class = "form-control", @readonly = true })
                @Html.ValidationMessageFor(model => model.NomorSP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConsultingRequestID, "Consulting Request", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBox("ConsultingRequest", null, new { @class = "form-control", placeholder = "Auto Complete", @onchange = "javascript: GetActiv(this.value);" })
                @Html.ValidationMessageFor(model => model.ConsultingRequestID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Activity", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBox("ActivityName", null, new { @class = "form-control", @readonly = true })
                @Html.ValidationMessage("", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EngagementName, "Engagement Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.EngagementName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EngagementName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, "Remarks", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group input-group-sm">
            @Html.LabelFor(model => model.StartDate, "Periode", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.StartDate, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker", @readonly = true })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                @Html.TextBoxFor(model => model.EndDate, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker", @readonly = true })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PicID, "Responsible Person", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.PicID, new { htmlAttributes = new { @class = "form-control", placeholder = "Auto Complete" } })
                @Html.ValidationMessageFor(model => model.PicID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupervisorID, "Supervisor", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.SupervisorID, new { htmlAttributes = new { @class = "form-control", placeholder = "Auto Complete" } })
                @Html.ValidationMessageFor(model => model.SupervisorID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TeamLeaderID, "Team Leader", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.TeamLeaderID, new { htmlAttributes = new { @class = "form-control", placeholder = "Auto Complete" } })
                @Html.ValidationMessageFor(model => model.TeamLeaderID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="MembersGroup">
            <div class="form-group" id="memberdiv1">
                @Html.Label("Member", htmlAttributes: new { @class = "control-label col-md-2", @id = "questionlabel#1" })
                <a href="#" class="btn btn-sm green" id='addButton'><i class="fa fa-plus"></i></a>
                @*<a href="#" class="btn btn-sm red" id='removeButton'><i class="fa fa-times"></i></a>*@
                <div class="col-md-5">
                    @Html.TextBox("member-1", null, new { @class = "form-control member", placeholder = "Auto Complete", @Name = "member" })
                </div>
            </div>
        </div>

        <div id="DasarGroup">
            <div class="form-group" id="dasardiv1">
                @Html.Label("Dasar", htmlAttributes: new { @class = "control-label col-md-2", @id = "questionlabel#1" })
                <a href="#" class="btn btn-sm green" id='addButtondasar'><i class="fa fa-plus"></i></a>
                @*<a href="#" class="btn btn-sm red" id='removeButtondasar'><i class="fa fa-times"></i></a>*@
                <div class="col-md-5">
                    @Html.TextBox("dasar-1", null, new { @class = "form-control", @Name = "dasar" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Menimbang, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @*@Html.EditorFor(model => model.Menimbang, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextArea("Menimbang", new { @class = "form-control", @rows = "4" })
                @Html.ValidationMessageFor(model => model.Menimbang, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="UntukGroup">
            <div class="form-group" id="untukdiv1">
                @Html.Label("Untuk", htmlAttributes: new { @class = "control-label col-md-2", @id = "questionlabel#1" })
                <a href="#" class="btn btn-sm green" id='addButtonuntuk'><i class="fa fa-plus"></i></a>
                @*<a href="#" class="btn btn-sm red" id='removeButtonuntuk'><i class="fa fa-times"></i></a>*@
                <div class="col-md-5">
                    @Html.TextBox("untuk-1", null, new { @class = "form-control", @Name = "untuk" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Penutup, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @*@Html.EditorFor(model => model.Penutup, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextArea("Penutup", new { @class = "form-control", @rows = "4" })
                @Html.ValidationMessageFor(model => model.Penutup, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="TembusanGroup">
            <div class="form-group" id="tembusandiv1">
                @Html.Label("Tembusan", htmlAttributes: new { @class = "control-label col-md-2", @id = "questionlabel#1" })
                <a href="#" class="btn btn-sm green" id='addButtontembusan'><i class="fa fa-plus"></i></a>
                @*<a href="#" class="btn btn-sm red" id='removeButtontembusan'><i class="fa fa-times"></i></a>*@
                <div class="col-md-5">
                    @Html.TextBox("tembusan-1", null, new { @class = "form-control", @Name = "tembusan" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-5">
                @if (userPerm.Any(d => d.IsCreate))
                {
                    if (userPerm.Any(d => d.IsSubmit1))
                    {
                        if (checkPerm.Contains("IsSubmit2"))
                        {
                            <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[2].Split(';')[0]"> Submit</button>
                        }
                        else if (checkPerm.Contains("IsApprove"))
                        {
                            <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]"> Submit</button>
                        }
                    }
                    else
                    {
                        <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[1].Split(';')[0]"> Submit</button>
                    }
                }
                else if (userPerm.Any(d => d.IsSubmit1))
                {
                    if (checkPerm.Contains("IsSubmit2"))
                    {
                        <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[2].Split(';')[0]"> Submit</button>
                    }
                    else if (checkPerm.Contains("IsApprove"))
                    {
                        <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]"> Submit</button>
                    }
                }
                else if (userPerm.Any(d => d.IsSubmit2))
                {
                    if (checkPerm.Contains("IsApprove"))
                    {
                        <button class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]"> Submit</button>
                    }
                }
                @*@if (checkPerm.Contains("IsSubmit1"))
                    {
                        <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[1].Split(';')[0]" />
                    }
                    else if (checkPerm.Contains("IsSubmit2"))
                    {
                        <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Review By @checkPerm.Split(':')[2].Split(';')[0]" />
                    }
                    else if (checkPerm.Contains("IsApprove"))
                    {
                        <input class="btn btn-primary" name="submit" type="submit" id="submit" value="Submit For Approve By @checkPerm.Split(':')[3].Split(';')[0]" />
                    }*@
                <input type="submit" name="submit" id="Status" class="btn btn-info" value="Save" />
                @*<input type="button" id="Status" class="btn btn-info" value="Create" onclick="this.disabled = true;
                    this.value = 'Sending Data..'; SaveMember($('#NomorSP').val(),
                    $('#ConsultingRequest').val(), $('#ActivityName').val(),$('#EngagementName').val(),
                    $('#Remarks').val(), $('#StartDate').val(), $('#EndDate').val(),
                    $('#PicID').val(), $('#SupervisorID').val(), $('#TeamLeaderID').val(),
                    $('#Menimbang').val(), $('#Penutup').val(), $('#Status').val());" />*@

            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $("#cspform").validate({
            errorLabelContainer: $("ul", $('div.error-container')),
            wrapper: 'li',
            rules: {
                NomorSP: "required",
                ConsultingRequest: "required",
                ActivityName: "required",
                EngagementName: "required",
                Remarks: "required",
                StartDate: "required",
                EndDate: "required",
                PicID: "required",
                SupervisorID: "required",
                TeamLeaderID: "required",
                member: "required",
                dasar: "required",
                Menimbang: "required",
                untuk: "required",
                Penutup: "required",
                tembusan: "required",
            },
            messages: {
                NomorSP: "Please enter Nomor SP",
                ConsultingRequest: "Please enter Consulting Request",
                ActivityName: "Please enter Acitivity",
                EngagementName: "Please enter Engagement Name",
                Remarks: "Please enter Remarks",
                StartDate: "Please enter Start Date",
                EndDate: "Please enter End Date",
                PicID: "Please enter Responsible Person",
                SupervisorID: "Please enter Supervisor",
                TeamLeaderID: "Please enter Team Leader",
                member: "Please enter Member",
                dasar: "Please enter Dasar",
                Menimbang: "Please enter Menimbang",
                untuk: "Please enter Untuk",
                Penutup: "Please enter Penutup",
                tembusan: "Please enter Tembusan",
            }
        });
    </script>
}

<script type="text/javascript">
    function SaveMember(_NomorSP, _ConsultingRequest, _ActivityName, _EngagementName, _Remarks,
        _StartDate, _EndDate, _PicID, _SupervisorID, _TeamLeaderID, _Menimbang, _Penutup, _Status) {

        var _members = ""
        for (i = 1; i < counter; i++) {
            if (counter == (i + 1)) {
                _members += $("#member-" + i).val()
            }
            else {
                _members += $("#member-" + i).val() + ";"
            }
        }

        var _dasar = ""
        for (i = 1; i < counters; i++) {
            if (counters == (i + 1)) {
                _dasar += $("#dasar-" + i).val()
            }
            else {
                _dasar += $("#dasar-" + i).val() + ";"
            }

        }

        var _untuk = ""
        for (i = 1; i < counteruntuk; i++) {

            if (counteruntuk == (i + 1)) {
                _untuk += $("#untuk-" + i).val()
            }
            else {
                _untuk += $("#untuk-" + i).val() + ";"
            }
        }

        var _tembusan = ""
        for (i = 1; i < countertembusan; i++) {
            if (countertembusan == (i + 1)) {
                _tembusan += $("#tembusan-" + i).val()
            }
            else {
                _tembusan += $("#tembusan-" + i).val() + ";"
            }
        }
        //alert(_dasar + "-" + _untuk + "-" + _tembusan);
        $.ajax({
            url: "/ConsultingLetterOfCommands/Create/",
            data: {
                NomorSP: _NomorSP,
                ConsultingRequest: _ConsultingRequest,
                ActivityName: _ActivityName,
                EngagementName: _EngagementName,
                Remarks: _Remarks,
                StartDate: _StartDate,
                EndDate: _EndDate,
                PicID: _PicID,
                SupervisorID: _SupervisorID,
                TeamLeaderID: _TeamLeaderID,
                Menimbang: _Menimbang,
                Penutup: _Penutup,
                member: _members,
                dasar: _dasar,
                untuk: _untuk,
                tembusan: _tembusan,
                submit: _Status,
            },
            cache: false,
            type: "POST",
            success: function (data) {

                window.location.href = "../ConsultingLetterOfCommands/Index";
            },
            error: function (reponse) {
                alert("error : " + reponse + " Data = " + data);
            }
        });
    }

    $(function () {
        $('#ConsultingRequest').autocomplete({
            source: '@Url.Action("AutocompleteCR")', change: function (event, ui) {
                if (!ui.item) {
                    $(this).val("");
                }
            }
        });
        $('#PicID').autocomplete({
            source: '@Url.Action("AutocompleteCIA")', change: function (event, ui) {
                if (!ui.item) {
                    $(this).val("");
                }
            }
        });
        $('#SupervisorID').autocomplete({
            source: '@Url.Action("AutocompletePengawas")', change: function (event, ui) {
                if (!ui.item) {
                    $(this).val("");
                }
            }
        });
        $('#TeamLeaderID').autocomplete({
            source: '@Url.Action("AutocompleteKetua")', change: function (event, ui) {
                if (!ui.item) {
                    $(this).val("");
                }
            }
        });
        $('.member').autocomplete({
            source: '@Url.Action("AutocompleteMember")', change: function (event, ui) {
                if (!ui.item) {
                    $(this).val("");
                }
            }
        });
    });

    function GetActiv(_noreq) {
        var url = "/ConsultingLetterOfCommands/GetActiv/";

        $.ajax({
            url: url,
            data: { noreq: _noreq },
            cache: false,
            type: "POST",
            success: function (data) {
                $('#ActivityName').val(data);
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });
    }

    var counter = 2;
    function removeMember(idx) {
        $("#memberdiv" + idx).remove();
    }
    $(document).ready(function () {
        $("#addButton").click(function () {
            if (counter > 10) {
                alert("Maksimal 10 Member");
                return false;
            }
            var newTextBoxDiv = $(document.createElement('div'))
                 .attr("id", 'memberdiv' + counter).addClass("form-group");
            var html = '<label class = "control-label col-md-2"></label>' +
                '<a href="#" class="btn btn-sm red" onclick="removeMember(' + counter + ');"><i class="fa fa-times"></i></a>' +
                '<div class="col-md-5"><input name="member" id="member-' + counter +
                '" value="" class="form-control member" type="text" placeholder = "Auto Complete" >';


            newTextBoxDiv.after().html(html);
            newTextBoxDiv.appendTo("#MembersGroup");
            counter++;
            $('.member').autocomplete({
                source: '@Url.Action("AutocompleteMember")', change: function (event, ui) {
                    if (!ui.item) {
                        $(this).val("");
                    }
                }
            });
        });
        $("#removeButton").click(function () {
            if (counter == 1) {
                alert("No more Member to remove");
                return false;
            }
            counter--;
            $("#memberdiv" + counter).remove();
        });
    });


    var counters = 2;
    function removeDasar(idx) {
        $("#dasardiv" + idx).remove();
    }
    $(document).ready(function () {
        $("#addButtondasar").click(function () {
            if (counters > 10) {
                alert("Maksimal 10 Dasar");
                return false;
            }
            var newTextBoxDiv = $(document.createElement('div'))
                 .attr("id", 'dasardiv' + counters).addClass("form-group");
            var html = '<label class = "control-label col-md-2"></label>' +
                '<a href="#" class="btn btn-sm red" onclick="removeDasar(' + counters + ');"><i class="fa fa-times"></i></a>' +
                '<div class="col-md-5"><input name="dasar" id="dasar-' + counters +
                '" value="" class="form-control" type="text" >';


            newTextBoxDiv.after().html(html);
            newTextBoxDiv.appendTo("#DasarGroup");
            counters++;

        });
        $("#removeButtondasar").click(function () {
            if (counters == 1) {
                alert("No more Dasar to remove");
                return false;
            }
            counters--;
            $("#dasardiv" + counters).remove();
        });
    });

    var counteruntuk = 2;
    function removeUntuk(idx) {
        $("#untukdiv" + idx).remove();
    }
    $(document).ready(function () {
        $("#addButtonuntuk").click(function () {
            if (counteruntuk > 10) {
                alert("Maksimal 10 Untuk");
                return false;
            }
            var newTextBoxDiv = $(document.createElement('div'))
                 .attr("id", 'untukdiv' + counteruntuk).addClass("form-group");
            var html = '<label class = "control-label col-md-2"></label>' +
                '<a href="#" class="btn btn-sm red" onclick="removeUntuk(' + counteruntuk + ');"><i class="fa fa-times"></i></a>' +
                '<div class="col-md-5"><input name="untuk" id="untuk-' + counteruntuk +
                '" value="" class="form-control" type="text" >';


            newTextBoxDiv.after().html(html);
            newTextBoxDiv.appendTo("#UntukGroup");
            counteruntuk++;

        });
        $("#removeButtonuntuk").click(function () {
            if (counteruntuk == 1) {
                alert("No more Untuk to remove");
                return false;
            }
            counteruntuk--;
            $("#untukdiv" + counteruntuk).remove();
        });
    });

    var countertembusan = 2;
    function removeTembusan(idx) {
        $("#tembusandiv" + idx).remove();
    }
    $(document).ready(function () {
        $("#addButtontembusan").click(function () {
            if (countertembusan > 10) {
                alert("Maksimal 10 Tembusan");
                return false;
            }
            var newTextBoxDiv = $(document.createElement('div'))
                 .attr("id", 'tembusandiv' + countertembusan).addClass("form-group");
            var html = '<label class = "control-label col-md-2"></label>' +
                '<a href="#" class="btn btn-sm red" onclick="removeTembusan(' + countertembusan + ');"><i class="fa fa-times"></i></a>' +
                '<div class="col-md-5"><input name="tembusan" id="tembusan-' + countertembusan +
                '" value="" class="form-control" type="text" >';


            newTextBoxDiv.after().html(html);
            newTextBoxDiv.appendTo("#TembusanGroup");
            countertembusan++;

        });
        $("#removeButtontembusan").click(function () {
            if (countertembusan == 1) {
                alert("No more Tembusan to remove");
                return false;
            }
            countertembusan--;
            $("#tembusandiv" + countertembusan).remove();
        });
        $("#ConsultingRequest").keyup(function (event) {
            if (event.keyCode == 13) {
                GetActiv($("#ConsultingRequest").val());
            }
        });
        $("#ConsultingRequest").keydown(function (event) {
            if (event.keyCode == 9) {
                GetActiv($("#ConsultingRequest").val());
            }
        });
    });

    $(function () {
        $("#submit").click(function () {
            if (confirm("Are You Sure Want To Submit?")) {
                $('#submit').submit();
            } else {
                event.preventDefault();
            }
        });
    });
</script>

